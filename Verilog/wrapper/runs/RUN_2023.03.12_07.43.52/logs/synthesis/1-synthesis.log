
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.20+70 (git sha1 6e907acf8, gcc 11.2.1 -fPIC -Os)

[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.

1. Executing Verilog-2005 frontend: /foss/designs/ma2022/wrapper/src/fll_2.v
Parsing SystemVerilog input from `/foss/designs/ma2022/wrapper/src/fll_2.v' to AST representation.
Generating RTLIL representation for module `\fll_2'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: /foss/designs/ma2022/wrapper/src/pwm_dac.v
Parsing SystemVerilog input from `/foss/designs/ma2022/wrapper/src/pwm_dac.v' to AST representation.
Generating RTLIL representation for module `\pwm_dac'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: /foss/designs/ma2022/wrapper/src/demux.v
Parsing SystemVerilog input from `/foss/designs/ma2022/wrapper/src/demux.v' to AST representation.
Generating RTLIL representation for module `\demux'.
Note: Assuming pure combinatorial block at /foss/designs/ma2022/wrapper/src/demux.v:8.1-18.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: /foss/designs/ma2022/wrapper/src/bufferreg.v
Parsing SystemVerilog input from `/foss/designs/ma2022/wrapper/src/bufferreg.v' to AST representation.
Generating RTLIL representation for module `\bufferreg'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: /foss/designs/ma2022/wrapper/src/wrapper.v
Parsing SystemVerilog input from `/foss/designs/ma2022/wrapper/src/wrapper.v' to AST representation.
Generating RTLIL representation for module `\wrapper'.
Warning: reg '\slope_ctrl' is assigned in a continuous assignment at /foss/designs/ma2022/wrapper/src/wrapper.v:26.8-26.36.
Warning: reg '\vbias1' is assigned in a continuous assignment at /foss/designs/ma2022/wrapper/src/wrapper.v:27.8-27.32.
Warning: reg '\vbias2' is assigned in a continuous assignment at /foss/designs/ma2022/wrapper/src/wrapper.v:28.8-28.32.
Warning: reg '\vbias3' is assigned in a continuous assignment at /foss/designs/ma2022/wrapper/src/wrapper.v:29.8-29.32.
/foss/designs/ma2022/wrapper/src/wrapper.v:21: Warning: Identifier `\lock_tmp' is implicitly declared.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: /foss/designs/ma2022/wrapper/src/mux.v
Parsing SystemVerilog input from `/foss/designs/ma2022/wrapper/src/mux.v' to AST representation.
Generating RTLIL representation for module `\mux'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: /foss/designs/ma2022/wrapper/src/clk_divider.v
Parsing SystemVerilog input from `/foss/designs/ma2022/wrapper/src/clk_divider.v' to AST representation.
Generating RTLIL representation for module `\clk_divider'.
Warning: reg '\clk_out' is assigned in a continuous assignment at /foss/designs/ma2022/wrapper/src/clk_divider.v:13.8-13.59.
Warning: reg '\clk_in_passthru' is assigned in a continuous assignment at /foss/designs/ma2022/wrapper/src/clk_divider.v:26.11-26.35.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: /foss/designs/ma2022/wrapper/src/freqdiv.v
Parsing SystemVerilog input from `/foss/designs/ma2022/wrapper/src/freqdiv.v' to AST representation.
Generating RTLIL representation for module `\clock_divider'.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: /foss/designs/ma2022/wrapper/src/shiftregister.v
Parsing SystemVerilog input from `/foss/designs/ma2022/wrapper/src/shiftregister.v' to AST representation.
Generating RTLIL representation for module `\shiftregister'.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: /foss/designs/ma2022/wrapper/src/fll_wrapper_2.v
Parsing SystemVerilog input from `/foss/designs/ma2022/wrapper/src/fll_wrapper_2.v' to AST representation.
Generating RTLIL representation for module `\fll_wrapper_2'.
Successfully finished Verilog frontend.

11. Executing Verilog-2005 frontend: /foss/designs/ma2022/wrapper/src/fll_counter.v
Parsing SystemVerilog input from `/foss/designs/ma2022/wrapper/src/fll_counter.v' to AST representation.
Generating RTLIL representation for module `\fll_counter'.
Successfully finished Verilog frontend.

12. Generating Graphviz representation of design.
Writing dot description to `/foss/designs/ma2022/wrapper/runs/RUN_2023.03.12_07.43.52/tmp/synthesis/hierarchy.dot'.
Dumping module wrapper to page 1.
Warning: WIDTHLABEL \r_config [45] 1
Warning: WIDTHLABEL \r_config [46] 1
Warning: WIDTHLABEL \r_config [43:34] 10
Warning: WIDTHLABEL \r_config [44] 1
Warning: WIDTHLABEL \r_config [32:30] 3
Warning: WIDTHLABEL \r_config [33] 1
Warning: WIDTHLABEL \r_config [67:58] 10
Warning: WIDTHLABEL \r_config [56:47] 10
Warning: WIDTHLABEL \r_config [57] 1
Warning: WIDTHLABEL \r_config [9:0] 10
Warning: WIDTHLABEL \r_config [19:10] 10
Warning: WIDTHLABEL \r_config [29:20] 10

13. Executing HIERARCHY pass (managing design hierarchy).

13.1. Analyzing design hierarchy..
Top module:  \wrapper
Used module:     \mux
Used module:     \fll_wrapper_2
Used module:         \bufferreg
Used module:         \fll_2
Used module:             \fll_counter
Used module:     \shiftregister
Parameter \N = 32

13.2. Executing AST frontend in derive mode using pre-parsed AST for module `\fll_counter'.
Parameter \N = 32
Generating RTLIL representation for module `$paramod\fll_counter\N=s32'00000000000000000000000000100000'.
Parameter \N = 32
Found cached RTLIL representation for module `$paramod\fll_counter\N=s32'00000000000000000000000000100000'.
Parameter \N = 1

13.3. Executing AST frontend in derive mode using pre-parsed AST for module `\mux'.
Parameter \N = 1
Generating RTLIL representation for module `$paramod\mux\N=s32'00000000000000000000000000000001'.
Parameter \N = 8

13.4. Executing AST frontend in derive mode using pre-parsed AST for module `\mux'.
Parameter \N = 8
Generating RTLIL representation for module `$paramod\mux\N=s32'00000000000000000000000000001000'.
Parameter \N = 3

13.5. Executing AST frontend in derive mode using pre-parsed AST for module `\mux'.
Parameter \N = 3
Generating RTLIL representation for module `$paramod\mux\N=s32'00000000000000000000000000000011'.
Parameter \N = 10

13.6. Executing AST frontend in derive mode using pre-parsed AST for module `\fll_wrapper_2'.
Parameter \N = 10
Generating RTLIL representation for module `$paramod\fll_wrapper_2\N=s32'00000000000000000000000000001010'.
Parameter \N = 96

13.7. Executing AST frontend in derive mode using pre-parsed AST for module `\shiftregister'.
Parameter \N = 96
Generating RTLIL representation for module `$paramod\shiftregister\N=s32'00000000000000000000000001100000'.
Parameter \N = 10

13.8. Executing AST frontend in derive mode using pre-parsed AST for module `\bufferreg'.
Parameter \N = 10
Generating RTLIL representation for module `$paramod\bufferreg\N=s32'00000000000000000000000000001010'.
Parameter \N = 10

13.9. Executing AST frontend in derive mode using pre-parsed AST for module `\mux'.
Parameter \N = 10
Generating RTLIL representation for module `$paramod\mux\N=s32'00000000000000000000000000001010'.
Parameter \N = 10

13.10. Executing AST frontend in derive mode using pre-parsed AST for module `\fll_2'.
Parameter \N = 10
Generating RTLIL representation for module `$paramod\fll_2\N=s32'00000000000000000000000000001010'.

13.11. Analyzing design hierarchy..
Top module:  \wrapper
Used module:     $paramod\mux\N=s32'00000000000000000000000000000001
Used module:     $paramod\mux\N=s32'00000000000000000000000000001000
Used module:     $paramod\mux\N=s32'00000000000000000000000000000011
Used module:     $paramod\fll_wrapper_2\N=s32'00000000000000000000000000001010
Used module:         \bufferreg
Used module:         \mux
Used module:         \fll_2
Used module:             $paramod\fll_counter\N=s32'00000000000000000000000000100000
Used module:     $paramod\shiftregister\N=s32'00000000000000000000000001100000
Parameter \N = 10
Found cached RTLIL representation for module `$paramod\bufferreg\N=s32'00000000000000000000000000001010'.
Parameter \N = 10
Found cached RTLIL representation for module `$paramod\mux\N=s32'00000000000000000000000000001010'.
Parameter \N = 10
Found cached RTLIL representation for module `$paramod\fll_2\N=s32'00000000000000000000000000001010'.

13.12. Analyzing design hierarchy..
Top module:  \wrapper
Used module:     $paramod\mux\N=s32'00000000000000000000000000000001
Used module:     $paramod\mux\N=s32'00000000000000000000000000001000
Used module:     $paramod\mux\N=s32'00000000000000000000000000000011
Used module:     $paramod\fll_wrapper_2\N=s32'00000000000000000000000000001010
Used module:         $paramod\bufferreg\N=s32'00000000000000000000000000001010
Used module:         $paramod\mux\N=s32'00000000000000000000000000001010
Used module:         $paramod\fll_2\N=s32'00000000000000000000000000001010
Used module:             \fll_counter
Used module:     $paramod\shiftregister\N=s32'00000000000000000000000001100000
Parameter \N = 10

13.13. Executing AST frontend in derive mode using pre-parsed AST for module `\fll_counter'.
Parameter \N = 10
Generating RTLIL representation for module `$paramod\fll_counter\N=s32'00000000000000000000000000001010'.
Parameter \N = 10
Found cached RTLIL representation for module `$paramod\fll_counter\N=s32'00000000000000000000000000001010'.

13.14. Analyzing design hierarchy..
Top module:  \wrapper
Used module:     $paramod\mux\N=s32'00000000000000000000000000000001
Used module:     $paramod\mux\N=s32'00000000000000000000000000001000
Used module:     $paramod\mux\N=s32'00000000000000000000000000000011
Used module:     $paramod\fll_wrapper_2\N=s32'00000000000000000000000000001010
Used module:         $paramod\bufferreg\N=s32'00000000000000000000000000001010
Used module:         $paramod\mux\N=s32'00000000000000000000000000001010
Used module:         $paramod\fll_2\N=s32'00000000000000000000000000001010
Used module:             $paramod\fll_counter\N=s32'00000000000000000000000000001010
Used module:     $paramod\shiftregister\N=s32'00000000000000000000000001100000

13.15. Analyzing design hierarchy..
Top module:  \wrapper
Used module:     $paramod\mux\N=s32'00000000000000000000000000000001
Used module:     $paramod\mux\N=s32'00000000000000000000000000001000
Used module:     $paramod\mux\N=s32'00000000000000000000000000000011
Used module:     $paramod\fll_wrapper_2\N=s32'00000000000000000000000000001010
Used module:         $paramod\bufferreg\N=s32'00000000000000000000000000001010
Used module:         $paramod\mux\N=s32'00000000000000000000000000001010
Used module:         $paramod\fll_2\N=s32'00000000000000000000000000001010
Used module:             $paramod\fll_counter\N=s32'00000000000000000000000000001010
Used module:     $paramod\shiftregister\N=s32'00000000000000000000000001100000
Removing unused module `$paramod\fll_counter\N=s32'00000000000000000000000000100000'.
Removing unused module `\fll_counter'.
Removing unused module `\fll_wrapper_2'.
Removing unused module `\shiftregister'.
Removing unused module `\clock_divider'.
Removing unused module `\clk_divider'.
Removing unused module `\mux'.
Removing unused module `\bufferreg'.
Removing unused module `\demux'.
Removing unused module `\pwm_dac'.
Removing unused module `\fll_2'.
Removed 11 unused modules.
Warning: Resizing cell port wrapper.m2.out from 10 bits to 8 bits.
Warning: Resizing cell port wrapper.m2.in1 from 10 bits to 8 bits.
Warning: Resizing cell port wrapper.m2.in0 from 10 bits to 8 bits.

14. Executing TRIBUF pass.

15. Executing SYNTH pass.

15.1. Executing HIERARCHY pass (managing design hierarchy).

15.1.1. Analyzing design hierarchy..
Top module:  \wrapper
Used module:     $paramod\mux\N=s32'00000000000000000000000000000001
Used module:     $paramod\mux\N=s32'00000000000000000000000000001000
Used module:     $paramod\mux\N=s32'00000000000000000000000000000011
Used module:     $paramod\fll_wrapper_2\N=s32'00000000000000000000000000001010
Used module:         $paramod\bufferreg\N=s32'00000000000000000000000000001010
Used module:         $paramod\mux\N=s32'00000000000000000000000000001010
Used module:         $paramod\fll_2\N=s32'00000000000000000000000000001010
Used module:             $paramod\fll_counter\N=s32'00000000000000000000000000001010
Used module:     $paramod\shiftregister\N=s32'00000000000000000000000001100000

15.1.2. Analyzing design hierarchy..
Top module:  \wrapper
Used module:     $paramod\mux\N=s32'00000000000000000000000000000001
Used module:     $paramod\mux\N=s32'00000000000000000000000000001000
Used module:     $paramod\mux\N=s32'00000000000000000000000000000011
Used module:     $paramod\fll_wrapper_2\N=s32'00000000000000000000000000001010
Used module:         $paramod\bufferreg\N=s32'00000000000000000000000000001010
Used module:         $paramod\mux\N=s32'00000000000000000000000000001010
Used module:         $paramod\fll_2\N=s32'00000000000000000000000000001010
Used module:             $paramod\fll_counter\N=s32'00000000000000000000000000001010
Used module:     $paramod\shiftregister\N=s32'00000000000000000000000001100000
Removed 0 unused modules.

15.2. Executing PROC pass (convert processes to netlists).

15.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

15.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/foss/designs/ma2022/wrapper/src/bufferreg.v:11$58 in module $paramod\bufferreg\N=s32'00000000000000000000000000001010.
Marked 3 switch rules as full_case in process $proc$/foss/designs/ma2022/wrapper/src/shiftregister.v:16$55 in module $paramod\shiftregister\N=s32'00000000000000000000000001100000.
Marked 1 switch rules as full_case in process $proc$/foss/designs/ma2022/wrapper/src/fll_counter.v:11$77 in module $paramod\fll_counter\N=s32'00000000000000000000000000001010.
Marked 6 switch rules as full_case in process $proc$/foss/designs/ma2022/wrapper/src/fll_2.v:26$61 in module $paramod\fll_2\N=s32'00000000000000000000000000001010.
Removed a total of 0 dead cases.

15.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 4 redundant assignments.
Promoted 8 assignments to connections.

15.2.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `$paramod\bufferreg\N=s32'00000000000000000000000000001010.$proc$/foss/designs/ma2022/wrapper/src/bufferreg.v:9$59'.
  Set init value: \tmp = 10'0000000000
Found init rule in `$paramod\shiftregister\N=s32'00000000000000000000000001100000.$proc$/foss/designs/ma2022/wrapper/src/shiftregister.v:14$57'.
  Set init value: \t_load = 96'000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
Found init rule in `$paramod\shiftregister\N=s32'00000000000000000000000001100000.$proc$/foss/designs/ma2022/wrapper/src/shiftregister.v:13$56'.
  Set init value: \r_reg = 96'000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
Found init rule in `$paramod\fll_counter\N=s32'00000000000000000000000000001010.$proc$/foss/designs/ma2022/wrapper/src/fll_counter.v:9$79'.
  Set init value: \count = 10'0000000000
Found init rule in `$paramod\fll_2\N=s32'00000000000000000000000000001010.$proc$/foss/designs/ma2022/wrapper/src/fll_2.v:20$76'.
  Set init value: \corner_tmp = 3'010
Found init rule in `$paramod\fll_2\N=s32'00000000000000000000000000001010.$proc$/foss/designs/ma2022/wrapper/src/fll_2.v:19$75'.
  Set init value: \tmp = 10'0111000000
Found init rule in `$paramod\fll_2\N=s32'00000000000000000000000000001010.$proc$/foss/designs/ma2022/wrapper/src/fll_2.v:16$74'.
  Set init value: \counter_reset = 1'1

15.2.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \reset in `$paramod\bufferreg\N=s32'00000000000000000000000000001010.$proc$/foss/designs/ma2022/wrapper/src/bufferreg.v:11$58'.
Found async reset \reset in `$paramod\shiftregister\N=s32'00000000000000000000000001100000.$proc$/foss/designs/ma2022/wrapper/src/shiftregister.v:16$55'.
Found async reset \reset in `$paramod\fll_counter\N=s32'00000000000000000000000000001010.$proc$/foss/designs/ma2022/wrapper/src/fll_counter.v:11$77'.
Found async reset \reset in `$paramod\fll_2\N=s32'00000000000000000000000000001010.$proc$/foss/designs/ma2022/wrapper/src/fll_2.v:26$61'.

15.2.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~8 debug messages>

15.2.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\bufferreg\N=s32'00000000000000000000000000001010.$proc$/foss/designs/ma2022/wrapper/src/bufferreg.v:9$59'.
Creating decoders for process `$paramod\bufferreg\N=s32'00000000000000000000000000001010.$proc$/foss/designs/ma2022/wrapper/src/bufferreg.v:11$58'.
     1/1: $0\tmp[9:0]
Creating decoders for process `$paramod\shiftregister\N=s32'00000000000000000000000001100000.$proc$/foss/designs/ma2022/wrapper/src/shiftregister.v:14$57'.
Creating decoders for process `$paramod\shiftregister\N=s32'00000000000000000000000001100000.$proc$/foss/designs/ma2022/wrapper/src/shiftregister.v:13$56'.
Creating decoders for process `$paramod\shiftregister\N=s32'00000000000000000000000001100000.$proc$/foss/designs/ma2022/wrapper/src/shiftregister.v:16$55'.
     1/2: $0\t_load[95:0]
     2/2: $0\r_reg[95:0]
Creating decoders for process `$paramod\fll_counter\N=s32'00000000000000000000000000001010.$proc$/foss/designs/ma2022/wrapper/src/fll_counter.v:9$79'.
Creating decoders for process `$paramod\fll_counter\N=s32'00000000000000000000000000001010.$proc$/foss/designs/ma2022/wrapper/src/fll_counter.v:11$77'.
     1/1: $0\count[9:0]
Creating decoders for process `$paramod\fll_2\N=s32'00000000000000000000000000001010.$proc$/foss/designs/ma2022/wrapper/src/fll_2.v:20$76'.
Creating decoders for process `$paramod\fll_2\N=s32'00000000000000000000000000001010.$proc$/foss/designs/ma2022/wrapper/src/fll_2.v:19$75'.
Creating decoders for process `$paramod\fll_2\N=s32'00000000000000000000000000001010.$proc$/foss/designs/ma2022/wrapper/src/fll_2.v:16$74'.
Creating decoders for process `$paramod\fll_2\N=s32'00000000000000000000000000001010.$proc$/foss/designs/ma2022/wrapper/src/fll_2.v:26$61'.
     1/10: $6\corner_tmp[2:0]
     2/10: $5\corner_tmp[2:0]
     3/10: $4\corner_tmp[2:0]
     4/10: $3\corner_tmp[2:0]
     5/10: $2\corner_tmp[2:0]
     6/10: $1\corner_tmp[2:0]
     7/10: $0\strobe[0:0]
     8/10: $0\counter_reset[0:0]
     9/10: $0\tmp[9:0]
    10/10: $0\locked[0:0]

15.2.8. Executing PROC_DLATCH pass (convert process syncs to latches).

15.2.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod\bufferreg\N=s32'00000000000000000000000000001010.\tmp' using process `$paramod\bufferreg\N=s32'00000000000000000000000000001010.$proc$/foss/designs/ma2022/wrapper/src/bufferreg.v:11$58'.
  created $adff cell `$procdff$160' with positive edge clock and positive level reset.
Creating register for signal `$paramod\shiftregister\N=s32'00000000000000000000000001100000.\r_reg' using process `$paramod\shiftregister\N=s32'00000000000000000000000001100000.$proc$/foss/designs/ma2022/wrapper/src/shiftregister.v:16$55'.
  created $adff cell `$procdff$161' with positive edge clock and positive level reset.
Creating register for signal `$paramod\shiftregister\N=s32'00000000000000000000000001100000.\t_load' using process `$paramod\shiftregister\N=s32'00000000000000000000000001100000.$proc$/foss/designs/ma2022/wrapper/src/shiftregister.v:16$55'.
  created $adff cell `$procdff$162' with positive edge clock and positive level reset.
Creating register for signal `$paramod\fll_counter\N=s32'00000000000000000000000000001010.\count' using process `$paramod\fll_counter\N=s32'00000000000000000000000000001010.$proc$/foss/designs/ma2022/wrapper/src/fll_counter.v:11$77'.
  created $adff cell `$procdff$163' with positive edge clock and positive level reset.
Creating register for signal `$paramod\fll_2\N=s32'00000000000000000000000000001010.\strobe' using process `$paramod\fll_2\N=s32'00000000000000000000000000001010.$proc$/foss/designs/ma2022/wrapper/src/fll_2.v:26$61'.
  created $adff cell `$procdff$164' with positive edge clock and positive level reset.
Creating register for signal `$paramod\fll_2\N=s32'00000000000000000000000000001010.\locked' using process `$paramod\fll_2\N=s32'00000000000000000000000000001010.$proc$/foss/designs/ma2022/wrapper/src/fll_2.v:26$61'.
  created $adff cell `$procdff$165' with positive edge clock and positive level reset.
Creating register for signal `$paramod\fll_2\N=s32'00000000000000000000000000001010.\counter_reset' using process `$paramod\fll_2\N=s32'00000000000000000000000000001010.$proc$/foss/designs/ma2022/wrapper/src/fll_2.v:26$61'.
  created $adff cell `$procdff$166' with positive edge clock and positive level reset.
Creating register for signal `$paramod\fll_2\N=s32'00000000000000000000000000001010.\tmp' using process `$paramod\fll_2\N=s32'00000000000000000000000000001010.$proc$/foss/designs/ma2022/wrapper/src/fll_2.v:26$61'.
  created $adff cell `$procdff$167' with positive edge clock and positive level reset.
Creating register for signal `$paramod\fll_2\N=s32'00000000000000000000000000001010.\corner_tmp' using process `$paramod\fll_2\N=s32'00000000000000000000000000001010.$proc$/foss/designs/ma2022/wrapper/src/fll_2.v:26$61'.
  created $dff cell `$procdff$170' with positive edge clock.

15.2.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

15.2.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\bufferreg\N=s32'00000000000000000000000000001010.$proc$/foss/designs/ma2022/wrapper/src/bufferreg.v:9$59'.
Removing empty process `$paramod\bufferreg\N=s32'00000000000000000000000000001010.$proc$/foss/designs/ma2022/wrapper/src/bufferreg.v:11$58'.
Removing empty process `$paramod\shiftregister\N=s32'00000000000000000000000001100000.$proc$/foss/designs/ma2022/wrapper/src/shiftregister.v:14$57'.
Removing empty process `$paramod\shiftregister\N=s32'00000000000000000000000001100000.$proc$/foss/designs/ma2022/wrapper/src/shiftregister.v:13$56'.
Found and cleaned up 2 empty switches in `$paramod\shiftregister\N=s32'00000000000000000000000001100000.$proc$/foss/designs/ma2022/wrapper/src/shiftregister.v:16$55'.
Removing empty process `$paramod\shiftregister\N=s32'00000000000000000000000001100000.$proc$/foss/designs/ma2022/wrapper/src/shiftregister.v:16$55'.
Removing empty process `$paramod\fll_counter\N=s32'00000000000000000000000000001010.$proc$/foss/designs/ma2022/wrapper/src/fll_counter.v:9$79'.
Removing empty process `$paramod\fll_counter\N=s32'00000000000000000000000000001010.$proc$/foss/designs/ma2022/wrapper/src/fll_counter.v:11$77'.
Removing empty process `$paramod\fll_2\N=s32'00000000000000000000000000001010.$proc$/foss/designs/ma2022/wrapper/src/fll_2.v:20$76'.
Removing empty process `$paramod\fll_2\N=s32'00000000000000000000000000001010.$proc$/foss/designs/ma2022/wrapper/src/fll_2.v:19$75'.
Removing empty process `$paramod\fll_2\N=s32'00000000000000000000000000001010.$proc$/foss/designs/ma2022/wrapper/src/fll_2.v:16$74'.
Found and cleaned up 6 empty switches in `$paramod\fll_2\N=s32'00000000000000000000000000001010.$proc$/foss/designs/ma2022/wrapper/src/fll_2.v:26$61'.
Removing empty process `$paramod\fll_2\N=s32'00000000000000000000000000001010.$proc$/foss/designs/ma2022/wrapper/src/fll_2.v:26$61'.
Cleaned up 8 empty switches.

15.2.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\mux\N=s32'00000000000000000000000000001010.
Optimizing module $paramod\bufferreg\N=s32'00000000000000000000000000001010.
Optimizing module $paramod\shiftregister\N=s32'00000000000000000000000001100000.
Optimizing module $paramod\fll_wrapper_2\N=s32'00000000000000000000000000001010.
Optimizing module $paramod\mux\N=s32'00000000000000000000000000000011.
Optimizing module wrapper.
Optimizing module $paramod\mux\N=s32'00000000000000000000000000001000.
Optimizing module $paramod\mux\N=s32'00000000000000000000000000000001.
Optimizing module $paramod\fll_counter\N=s32'00000000000000000000000000001010.
Optimizing module $paramod\fll_2\N=s32'00000000000000000000000000001010.

15.3. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod\mux\N=s32'00000000000000000000000000001010.
Deleting now unused module $paramod\bufferreg\N=s32'00000000000000000000000000001010.
Deleting now unused module $paramod\shiftregister\N=s32'00000000000000000000000001100000.
Deleting now unused module $paramod\fll_wrapper_2\N=s32'00000000000000000000000000001010.
Deleting now unused module $paramod\mux\N=s32'00000000000000000000000000000011.
Deleting now unused module $paramod\mux\N=s32'00000000000000000000000000001000.
Deleting now unused module $paramod\mux\N=s32'00000000000000000000000000000001.
Deleting now unused module $paramod\fll_counter\N=s32'00000000000000000000000000001010.
Deleting now unused module $paramod\fll_2\N=s32'00000000000000000000000000001010.
<suppressed ~10 debug messages>

15.4. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper.

15.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper..
Removed 0 unused cells and 55 unused wires.
<suppressed ~1 debug messages>

15.6. Executing CHECK pass (checking for obvious problems).
Checking module wrapper...
Warning: multiple conflicting drivers for wrapper.\d2.t_load [67]:
    port Q[67] of cell $flatten\d2.$procdff$162 ($adff)
    port Q[9] of cell $flatten\d5.\register.$procdff$160 ($adff)
Warning: multiple conflicting drivers for wrapper.\d2.t_load [66]:
    port Q[66] of cell $flatten\d2.$procdff$162 ($adff)
    port Q[8] of cell $flatten\d5.\register.$procdff$160 ($adff)
Warning: multiple conflicting drivers for wrapper.\d2.t_load [65]:
    port Q[65] of cell $flatten\d2.$procdff$162 ($adff)
    port Q[7] of cell $flatten\d5.\register.$procdff$160 ($adff)
Warning: multiple conflicting drivers for wrapper.\d2.t_load [64]:
    port Q[64] of cell $flatten\d2.$procdff$162 ($adff)
    port Q[6] of cell $flatten\d5.\register.$procdff$160 ($adff)
Warning: multiple conflicting drivers for wrapper.\d2.t_load [63]:
    port Q[63] of cell $flatten\d2.$procdff$162 ($adff)
    port Q[5] of cell $flatten\d5.\register.$procdff$160 ($adff)
Warning: multiple conflicting drivers for wrapper.\d2.t_load [62]:
    port Q[62] of cell $flatten\d2.$procdff$162 ($adff)
    port Q[4] of cell $flatten\d5.\register.$procdff$160 ($adff)
Warning: multiple conflicting drivers for wrapper.\d2.t_load [61]:
    port Q[61] of cell $flatten\d2.$procdff$162 ($adff)
    port Q[3] of cell $flatten\d5.\register.$procdff$160 ($adff)
Warning: multiple conflicting drivers for wrapper.\d2.t_load [60]:
    port Q[60] of cell $flatten\d2.$procdff$162 ($adff)
    port Q[2] of cell $flatten\d5.\register.$procdff$160 ($adff)
Warning: multiple conflicting drivers for wrapper.\d2.t_load [59]:
    port Q[59] of cell $flatten\d2.$procdff$162 ($adff)
    port Q[1] of cell $flatten\d5.\register.$procdff$160 ($adff)
Warning: multiple conflicting drivers for wrapper.\d2.t_load [58]:
    port Q[58] of cell $flatten\d2.$procdff$162 ($adff)
    port Q[0] of cell $flatten\d5.\register.$procdff$160 ($adff)
Found and reported 10 problems.

15.7. Executing OPT pass (performing simple optimizations).

15.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper.

15.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper'.
Removed a total of 0 cells.

15.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\d5.\fll_core.$procmux$106.
    dead port 2/2 on $mux $flatten\d5.\fll_core.$procmux$108.
    dead port 2/2 on $mux $flatten\d5.\fll_core.$procmux$115.
    dead port 2/2 on $mux $flatten\d5.\fll_core.$procmux$117.
    dead port 2/2 on $mux $flatten\d5.\fll_core.$procmux$123.
    dead port 2/2 on $mux $flatten\d5.\fll_core.$procmux$94.
    dead port 1/2 on $mux $flatten\d5.\fll_core.$procmux$97.
    dead port 2/2 on $mux $flatten\d5.\fll_core.$procmux$99.
Removed 8 multiplexer ports.
<suppressed ~11 debug messages>

15.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper.
Performed a total of 0 changes.

15.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

15.7.6. Executing OPT_DFF pass (perform DFF optimizations).

15.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper..
Removed 0 unused cells and 9 unused wires.
<suppressed ~1 debug messages>

15.7.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper.

15.7.9. Rerunning OPT passes. (Maybe there is more to do..)

15.7.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

15.7.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper.
Performed a total of 0 changes.

15.7.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper'.
Removed a total of 0 cells.

15.7.13. Executing OPT_DFF pass (perform DFF optimizations).

15.7.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper..

15.7.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper.

15.7.16. Finished OPT passes. (There is nothing left to do.)

15.8. Executing FSM pass (extract and optimize FSM).

15.8.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking wrapper.d5.fll_core.corner_tmp as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.

15.8.2. Executing FSM_EXTRACT pass (extracting FSM from design).

15.8.3. Executing FSM_OPT pass (simple optimizations of FSMs).

15.8.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper..

15.8.5. Executing FSM_OPT pass (simple optimizations of FSMs).

15.8.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

15.8.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

15.8.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

15.9. Executing OPT pass (performing simple optimizations).

15.9.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper.

15.9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper'.
Removed a total of 0 cells.

15.9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

15.9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper.
Performed a total of 0 changes.

15.9.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper'.
Removed a total of 0 cells.

15.9.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\d5.\fll_core.$procdff$170 ($dff) from module wrapper (D = $flatten\d5.\fll_core.$3\corner_tmp[2:0], Q = \d5.fll_core.corner_tmp).
Adding EN signal on $flatten\d5.\fll_core.$procdff$167 ($adff) from module wrapper (D = $flatten\d5.\fll_core.$procmux$145_Y, Q = \d5.fll_core.tmp).
Adding EN signal on $flatten\d5.\fll_core.$procdff$165 ($adff) from module wrapper (D = $flatten\d5.\fll_core.$procmux$156_Y, Q = \d5.fll_core.locked).
Adding EN signal on $flatten\d2.$procdff$162 ($adff) from module wrapper (D = \d2.r_reg, Q = \d2.t_load).
Adding EN signal on $flatten\d2.$procdff$161 ($adff) from module wrapper (D = $flatten\d2.$procmux$84_Y, Q = \d2.r_reg).

15.9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper..
Removed 6 unused cells and 6 unused wires.
<suppressed ~7 debug messages>

15.9.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper.
<suppressed ~3 debug messages>

15.9.9. Rerunning OPT passes. (Maybe there is more to do..)

15.9.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

15.9.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper.
Performed a total of 0 changes.

15.9.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

15.9.13. Executing OPT_DFF pass (perform DFF optimizations).

15.9.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

15.9.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper.

15.9.16. Rerunning OPT passes. (Maybe there is more to do..)

15.9.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

15.9.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper.
Performed a total of 0 changes.

15.9.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper'.
Removed a total of 0 cells.

15.9.20. Executing OPT_DFF pass (perform DFF optimizations).

15.9.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper..

15.9.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper.

15.9.23. Finished OPT passes. (There is nothing left to do.)

15.10. Executing WREDUCE pass (reducing word size of cells).
Removed top 21 bits (of 32) from port Y of cell wrapper.$flatten\d5.\fll_core.$add$/foss/designs/ma2022/wrapper/src/fll_2.v:42$64 ($add).
Removed top 21 bits (of 32) from port A of cell wrapper.$flatten\d5.\fll_core.$le$/foss/designs/ma2022/wrapper/src/fll_2.v:42$65 ($le).
Removed top 22 bits (of 32) from port B of cell wrapper.$flatten\d5.\fll_core.$le$/foss/designs/ma2022/wrapper/src/fll_2.v:42$65 ($le).
Removed top 21 bits (of 32) from port Y of cell wrapper.$flatten\d5.\fll_core.$sub$/foss/designs/ma2022/wrapper/src/fll_2.v:48$68 ($sub).
Removed top 31 bits (of 32) from port B of cell wrapper.$flatten\d5.\fll_core.$gt$/foss/designs/ma2022/wrapper/src/fll_2.v:48$69 ($gt).
Removed top 1 bits (of 2) from port B of cell wrapper.$auto$opt_dff.cc:195:make_patterns_logic$188 ($ne).
Removed top 1 bits (of 3) from port B of cell wrapper.$auto$opt_dff.cc:195:make_patterns_logic$186 ($ne).
Removed top 21 bits (of 32) from wire wrapper.$flatten\d5.\fll_core.$add$/foss/designs/ma2022/wrapper/src/fll_2.v:42$64_Y.

15.11. Executing PEEPOPT pass (run peephole optimizers).

15.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

15.13. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module wrapper:
  creating $macc model for $flatten\d5.\fll_core.$add$/foss/designs/ma2022/wrapper/src/fll_2.v:42$64 ($add).
  creating $macc model for $flatten\d5.\fll_core.$add$/foss/designs/ma2022/wrapper/src/fll_2.v:43$66 ($add).
  creating $macc model for $flatten\d5.\fll_core.$sub$/foss/designs/ma2022/wrapper/src/fll_2.v:48$68 ($sub).
  creating $macc model for $flatten\d5.\fll_core.$sub$/foss/designs/ma2022/wrapper/src/fll_2.v:49$70 ($sub).
  creating $macc model for $flatten\d5.\fll_core.\counter1.$add$/foss/designs/ma2022/wrapper/src/fll_counter.v:16$78 ($add).
  creating $macc model for $flatten\d5.\fll_core.\counter2.$add$/foss/designs/ma2022/wrapper/src/fll_counter.v:16$78 ($add).
  creating $alu model for $macc $flatten\d5.\fll_core.\counter2.$add$/foss/designs/ma2022/wrapper/src/fll_counter.v:16$78.
  creating $alu model for $macc $flatten\d5.\fll_core.\counter1.$add$/foss/designs/ma2022/wrapper/src/fll_counter.v:16$78.
  creating $alu model for $macc $flatten\d5.\fll_core.$sub$/foss/designs/ma2022/wrapper/src/fll_2.v:49$70.
  creating $alu model for $macc $flatten\d5.\fll_core.$sub$/foss/designs/ma2022/wrapper/src/fll_2.v:48$68.
  creating $alu model for $macc $flatten\d5.\fll_core.$add$/foss/designs/ma2022/wrapper/src/fll_2.v:43$66.
  creating $alu model for $macc $flatten\d5.\fll_core.$add$/foss/designs/ma2022/wrapper/src/fll_2.v:42$64.
  creating $alu model for $flatten\d5.\fll_core.$ge$/foss/designs/ma2022/wrapper/src/fll_2.v:52$71 ($ge): new $alu
  creating $alu model for $flatten\d5.\fll_core.$gt$/foss/designs/ma2022/wrapper/src/fll_2.v:40$63 ($gt): new $alu
  creating $alu model for $flatten\d5.\fll_core.$gt$/foss/designs/ma2022/wrapper/src/fll_2.v:48$69 ($gt): new $alu
  creating $alu model for $flatten\d5.\fll_core.$le$/foss/designs/ma2022/wrapper/src/fll_2.v:42$65 ($le): new $alu
  creating $alu model for $flatten\d5.\fll_core.$le$/foss/designs/ma2022/wrapper/src/fll_2.v:52$72 ($le): merged with $flatten\d5.\fll_core.$gt$/foss/designs/ma2022/wrapper/src/fll_2.v:40$63.
  creating $alu model for $flatten\d5.\fll_core.$lt$/foss/designs/ma2022/wrapper/src/fll_2.v:46$67 ($lt): merged with $flatten\d5.\fll_core.$ge$/foss/designs/ma2022/wrapper/src/fll_2.v:52$71.
  creating $alu cell for $flatten\d5.\fll_core.$le$/foss/designs/ma2022/wrapper/src/fll_2.v:42$65: $auto$alumacc.cc:485:replace_alu$203
  creating $alu cell for $flatten\d5.\fll_core.$gt$/foss/designs/ma2022/wrapper/src/fll_2.v:48$69: $auto$alumacc.cc:485:replace_alu$216
  creating $alu cell for $flatten\d5.\fll_core.$gt$/foss/designs/ma2022/wrapper/src/fll_2.v:40$63, $flatten\d5.\fll_core.$le$/foss/designs/ma2022/wrapper/src/fll_2.v:52$72: $auto$alumacc.cc:485:replace_alu$221
  creating $alu cell for $flatten\d5.\fll_core.$ge$/foss/designs/ma2022/wrapper/src/fll_2.v:52$71, $flatten\d5.\fll_core.$lt$/foss/designs/ma2022/wrapper/src/fll_2.v:46$67: $auto$alumacc.cc:485:replace_alu$234
  creating $alu cell for $flatten\d5.\fll_core.$add$/foss/designs/ma2022/wrapper/src/fll_2.v:42$64: $auto$alumacc.cc:485:replace_alu$247
  creating $alu cell for $flatten\d5.\fll_core.$add$/foss/designs/ma2022/wrapper/src/fll_2.v:43$66: $auto$alumacc.cc:485:replace_alu$250
  creating $alu cell for $flatten\d5.\fll_core.$sub$/foss/designs/ma2022/wrapper/src/fll_2.v:48$68: $auto$alumacc.cc:485:replace_alu$253
  creating $alu cell for $flatten\d5.\fll_core.$sub$/foss/designs/ma2022/wrapper/src/fll_2.v:49$70: $auto$alumacc.cc:485:replace_alu$256
  creating $alu cell for $flatten\d5.\fll_core.\counter1.$add$/foss/designs/ma2022/wrapper/src/fll_counter.v:16$78: $auto$alumacc.cc:485:replace_alu$259
  creating $alu cell for $flatten\d5.\fll_core.\counter2.$add$/foss/designs/ma2022/wrapper/src/fll_counter.v:16$78: $auto$alumacc.cc:485:replace_alu$262
  created 10 $alu and 0 $macc cells.

15.14. Executing SHARE pass (SAT-based resource sharing).

15.15. Executing OPT pass (performing simple optimizations).

15.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper.
<suppressed ~8 debug messages>

15.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper'.
Removed a total of 0 cells.

15.15.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

15.15.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper.
Performed a total of 0 changes.

15.15.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper'.
Removed a total of 0 cells.

15.15.6. Executing OPT_DFF pass (perform DFF optimizations).

15.15.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

15.15.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper.

15.15.9. Rerunning OPT passes. (Maybe there is more to do..)

15.15.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

15.15.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper.
Performed a total of 0 changes.

15.15.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper'.
Removed a total of 0 cells.

15.15.13. Executing OPT_DFF pass (perform DFF optimizations).

15.15.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper..

15.15.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper.

15.15.16. Finished OPT passes. (There is nothing left to do.)

15.16. Executing MEMORY pass.

15.16.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

15.16.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

15.16.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

15.16.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

15.16.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

15.16.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper..

15.16.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

15.16.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

15.16.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper..

15.16.10. Executing MEMORY_COLLECT pass (generating $mem cells).

15.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper..

15.18. Executing OPT pass (performing simple optimizations).

15.18.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper.
<suppressed ~12 debug messages>

15.18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper'.
Removed a total of 0 cells.

15.18.3. Executing OPT_DFF pass (perform DFF optimizations).

15.18.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper..
Removed 10 unused cells and 19 unused wires.
<suppressed ~11 debug messages>

15.18.5. Finished fast OPT passes.

15.19. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

15.20. Executing OPT pass (performing simple optimizations).

15.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper.

15.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper'.
Removed a total of 0 cells.

15.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

15.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper.
    Consolidated identical input bits for $mux cell $flatten\d5.\fll_core.$procmux$121:
      Old ports: A=3'100, B=3'001, Y=$flatten\d5.\fll_core.$3\corner_tmp[2:0]
      New ports: A=2'10, B=2'01, Y={ $flatten\d5.\fll_core.$3\corner_tmp[2:0] [2] $flatten\d5.\fll_core.$3\corner_tmp[2:0] [0] }
      New connections: $flatten\d5.\fll_core.$3\corner_tmp[2:0] [1] = 1'0
  Optimizing cells in module \wrapper.
Performed a total of 1 changes.

15.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper'.
Removed a total of 0 cells.

15.20.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $flatten\d5.\fll_core.$procmux$145 in front of them:
        $auto$alumacc.cc:485:replace_alu$256
        $auto$alumacc.cc:485:replace_alu$250

15.20.7. Executing OPT_DFF pass (perform DFF optimizations).

15.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

15.20.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper.
<suppressed ~2 debug messages>

15.20.10. Rerunning OPT passes. (Maybe there is more to do..)

15.20.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

15.20.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper.
    Consolidated identical input bits for $mux cell $auto$opt_share.cc:241:merge_operators$288:
      Old ports: A=10'1111111111, B=10'0000000001, Y=$auto$rtlil.cc:2468:Mux$289
      New ports: A=1'1, B=1'0, Y=$auto$rtlil.cc:2468:Mux$289 [1]
      New connections: { $auto$rtlil.cc:2468:Mux$289 [9:2] $auto$rtlil.cc:2468:Mux$289 [0] } = { $auto$rtlil.cc:2468:Mux$289 [1] $auto$rtlil.cc:2468:Mux$289 [1] $auto$rtlil.cc:2468:Mux$289 [1] $auto$rtlil.cc:2468:Mux$289 [1] $auto$rtlil.cc:2468:Mux$289 [1] $auto$rtlil.cc:2468:Mux$289 [1] $auto$rtlil.cc:2468:Mux$289 [1] $auto$rtlil.cc:2468:Mux$289 [1] 1'1 }
  Optimizing cells in module \wrapper.
Performed a total of 1 changes.

15.20.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper'.
Removed a total of 0 cells.

15.20.14. Executing OPT_SHARE pass.

15.20.15. Executing OPT_DFF pass (perform DFF optimizations).

15.20.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

15.20.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper.
<suppressed ~1 debug messages>

15.20.18. Rerunning OPT passes. (Maybe there is more to do..)

15.20.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

15.20.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper.
Performed a total of 0 changes.

15.20.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

15.20.22. Executing OPT_SHARE pass.

15.20.23. Executing OPT_DFF pass (perform DFF optimizations).

15.20.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

15.20.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper.

15.20.26. Rerunning OPT passes. (Maybe there is more to do..)

15.20.27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

15.20.28. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper.
Performed a total of 0 changes.

15.20.29. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper'.
Removed a total of 0 cells.

15.20.30. Executing OPT_SHARE pass.

15.20.31. Executing OPT_DFF pass (perform DFF optimizations).

15.20.32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper..

15.20.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper.

15.20.34. Finished OPT passes. (There is nothing left to do.)

15.21. Executing TECHMAP pass (map to technology primitives).

15.21.1. Executing Verilog-2005 frontend: /foss/tools/yosys/6e907ac/bin/../share/yosys/techmap.v
Parsing Verilog input from `/foss/tools/yosys/6e907ac/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

15.21.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $dffe.
Using template $paramod$1bb7aebaa32f16dab78ad6c76561e8e43e165fdb\_90_alu for cells of type $alu.
Using template $paramod$adbaf76fa5a3091a329503792521395f8ff4d1a4\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$1e8c376286295ea5767a0416bc3548f868074797\_90_alu for cells of type $alu.
Using template $paramod$6a42b6fefed750f8a1c58eab59479d960557103c\_90_alu for cells of type $alu.
Using template $paramod$484d51534650924b7ed4c69e46eed3a56904771f\_90_alu for cells of type $alu.
Using template $paramod$754650b284649a026620fc6856e5b6886cbfe794\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001011 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001010 for cells of type $lcu.
No more expansions possible.
<suppressed ~1178 debug messages>

15.22. Executing OPT pass (performing simple optimizations).

15.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper.
<suppressed ~519 debug messages>

15.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper'.
<suppressed ~162 debug messages>
Removed a total of 54 cells.

15.22.3. Executing OPT_DFF pass (perform DFF optimizations).

15.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper..
Removed 101 unused cells and 469 unused wires.
<suppressed ~102 debug messages>

15.22.5. Finished fast OPT passes.

15.23. Executing ABC pass (technology mapping using ABC).

15.23.1. Extracting gate netlist of module `\wrapper' to `<abc-temp-dir>/input.blif'..
Extracted 489 gates and 717 wires to a netlist network with 228 inputs and 155 outputs.

15.23.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

15.23.1.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:      118
ABC RESULTS:               NOT cells:       11
ABC RESULTS:              XNOR cells:       10
ABC RESULTS:             ORNOT cells:       26
ABC RESULTS:               NOR cells:       20
ABC RESULTS:              NAND cells:       11
ABC RESULTS:                OR cells:       43
ABC RESULTS:            ANDNOT cells:      100
ABC RESULTS:               AND cells:       15
ABC RESULTS:               XOR cells:       71
ABC RESULTS:        internal signals:      334
ABC RESULTS:           input signals:      228
ABC RESULTS:          output signals:      155
Removing temp directory.

15.24. Executing OPT pass (performing simple optimizations).

15.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper.

15.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

15.24.3. Executing OPT_DFF pass (perform DFF optimizations).

15.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper..
Removed 0 unused cells and 445 unused wires.
<suppressed ~1 debug messages>

15.24.5. Finished fast OPT passes.

15.25. Executing HIERARCHY pass (managing design hierarchy).

15.25.1. Analyzing design hierarchy..
Top module:  \wrapper

15.25.2. Analyzing design hierarchy..
Top module:  \wrapper
Removed 0 unused modules.

15.26. Printing statistics.

=== wrapper ===

   Number of wires:                463
   Number of wire bits:           1344
   Number of public wires:          89
   Number of public wire bits:     876
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                658
     $_ANDNOT_                      99
     $_AND_                         15
     $_DFFE_PP0N_                   96
     $_DFFE_PP0P_                  106
     $_DFFE_PP1P_                    1
     $_DFFE_PP_                      3
     $_DFF_PP0_                     31
     $_DFF_PP1_                      1
     $_MUX_                        118
     $_NAND_                        11
     $_NOR_                         16
     $_NOT_                         11
     $_ORNOT_                       26
     $_OR_                          43
     $_XNOR_                        10
     $_XOR_                         71

15.27. Executing CHECK pass (checking for obvious problems).
Checking module wrapper...
Warning: multiple conflicting drivers for wrapper.\d2.t_load [67]:
    port Q[0] of cell $auto$ff.cc:266:slice$809 ($_DFFE_PP0P_)
    port Q[0] of cell $auto$ff.cc:266:slice$879 ($_DFF_PP0_)
Warning: multiple conflicting drivers for wrapper.\d2.t_load [66]:
    port Q[0] of cell $auto$ff.cc:266:slice$808 ($_DFFE_PP0P_)
    port Q[0] of cell $auto$ff.cc:266:slice$878 ($_DFF_PP0_)
Warning: multiple conflicting drivers for wrapper.\d2.t_load [65]:
    port Q[0] of cell $auto$ff.cc:266:slice$807 ($_DFFE_PP0P_)
    port Q[0] of cell $auto$ff.cc:266:slice$877 ($_DFF_PP0_)
Warning: multiple conflicting drivers for wrapper.\d2.t_load [64]:
    port Q[0] of cell $auto$ff.cc:266:slice$806 ($_DFFE_PP0P_)
    port Q[0] of cell $auto$ff.cc:266:slice$876 ($_DFF_PP0_)
Warning: multiple conflicting drivers for wrapper.\d2.t_load [63]:
    port Q[0] of cell $auto$ff.cc:266:slice$805 ($_DFFE_PP0P_)
    port Q[0] of cell $auto$ff.cc:266:slice$875 ($_DFF_PP0_)
Warning: multiple conflicting drivers for wrapper.\d2.t_load [62]:
    port Q[0] of cell $auto$ff.cc:266:slice$804 ($_DFFE_PP0P_)
    port Q[0] of cell $auto$ff.cc:266:slice$874 ($_DFF_PP0_)
Warning: multiple conflicting drivers for wrapper.\d2.t_load [61]:
    port Q[0] of cell $auto$ff.cc:266:slice$803 ($_DFFE_PP0P_)
    port Q[0] of cell $auto$ff.cc:266:slice$873 ($_DFF_PP0_)
Warning: multiple conflicting drivers for wrapper.\d2.t_load [60]:
    port Q[0] of cell $auto$ff.cc:266:slice$802 ($_DFFE_PP0P_)
    port Q[0] of cell $auto$ff.cc:266:slice$872 ($_DFF_PP0_)
Warning: multiple conflicting drivers for wrapper.\d2.t_load [59]:
    port Q[0] of cell $auto$ff.cc:266:slice$801 ($_DFFE_PP0P_)
    port Q[0] of cell $auto$ff.cc:266:slice$871 ($_DFF_PP0_)
Warning: multiple conflicting drivers for wrapper.\d2.t_load [58]:
    port Q[0] of cell $auto$ff.cc:266:slice$800 ($_DFFE_PP0P_)
    port Q[0] of cell $auto$ff.cc:266:slice$870 ($_DFF_PP0_)
Found and reported 10 problems.

16. Generating Graphviz representation of design.
Writing dot description to `/foss/designs/ma2022/wrapper/runs/RUN_2023.03.12_07.43.52/tmp/synthesis/post_techmap.dot'.
Dumping module wrapper to page 1.
Warning: WIDTHLABEL \d5.fll_core.tmp [0] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$216.B [0] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [0] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$259.X [0] 1
Warning: WIDTHLABEL \d5.fll_core.counter2.count [0] 1
Warning: WIDTHLABEL \d2.t_load [0] 1
Warning: WIDTHLABEL \d5.fll_core.counter2.count [1] 1
Warning: WIDTHLABEL \d2.t_load [1] 1
Warning: WIDTHLABEL \d5.fll_core.counter2.count [2] 1
Warning: WIDTHLABEL \d2.t_load [2] 1
Warning: WIDTHLABEL \d5.fll_core.counter2.count [3] 1
Warning: WIDTHLABEL \d2.t_load [3] 1
Warning: WIDTHLABEL \d5.fll_core.counter2.count [4] 1
Warning: WIDTHLABEL \d2.t_load [4] 1
Warning: WIDTHLABEL \d5.fll_core.counter2.count [5] 1
Warning: WIDTHLABEL \d2.t_load [5] 1
Warning: WIDTHLABEL \d5.fll_core.counter2.count [6] 1
Warning: WIDTHLABEL \d2.t_load [6] 1
Warning: WIDTHLABEL \d5.fll_core.counter2.count [7] 1
Warning: WIDTHLABEL \d2.t_load [7] 1
Warning: WIDTHLABEL \d5.fll_core.counter2.count [8] 1
Warning: WIDTHLABEL \d2.t_load [8] 1
Warning: WIDTHLABEL \d5.fll_core.counter2.count [9] 1
Warning: WIDTHLABEL \d2.t_load [9] 1
Warning: WIDTHLABEL \d2.t_load [20] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [0] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [1] 1
Warning: WIDTHLABEL \d2.t_load [21] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [3] 1
Warning: WIDTHLABEL \d2.t_load [23] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [2] 1
Warning: WIDTHLABEL \d2.t_load [22] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [7] 1
Warning: WIDTHLABEL \d2.t_load [27] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [6] 1
Warning: WIDTHLABEL \d2.t_load [26] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [5] 1
Warning: WIDTHLABEL \d2.t_load [25] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [4] 1
Warning: WIDTHLABEL \d2.t_load [24] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [9] 1
Warning: WIDTHLABEL \d2.t_load [29] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [8] 1
Warning: WIDTHLABEL \d2.t_load [28] 1
Warning: WIDTHLABEL \d2.t_load [29] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [9] 1
Warning: WIDTHLABEL \d2.t_load [28] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [8] 1
Warning: WIDTHLABEL \d2.t_load [27] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [7] 1
Warning: WIDTHLABEL \d2.t_load [26] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [6] 1
Warning: WIDTHLABEL \d2.t_load [25] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [5] 1
Warning: WIDTHLABEL \d2.t_load [24] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [4] 1
Warning: WIDTHLABEL \d2.t_load [23] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [3] 1
Warning: WIDTHLABEL \d2.t_load [22] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [2] 1
Warning: WIDTHLABEL \d2.t_load [21] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [1] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [0] 1
Warning: WIDTHLABEL \d2.t_load [20] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$256.B [9] 1
Warning: WIDTHLABEL \d2.t_load [19] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [9] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [9] 1
Warning: WIDTHLABEL \d2.t_load [19] 1
Warning: WIDTHLABEL \d2.t_load [18] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [8] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [8] 1
Warning: WIDTHLABEL \d2.t_load [18] 1
Warning: WIDTHLABEL \d2.t_load [17] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [7] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [7] 1
Warning: WIDTHLABEL \d2.t_load [17] 1
Warning: WIDTHLABEL \d2.t_load [16] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [6] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [6] 1
Warning: WIDTHLABEL \d2.t_load [16] 1
Warning: WIDTHLABEL \d2.t_load [15] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [5] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [5] 1
Warning: WIDTHLABEL \d2.t_load [15] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [4] 1
Warning: WIDTHLABEL \d2.t_load [14] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [4] 1
Warning: WIDTHLABEL \d2.t_load [14] 1
Warning: WIDTHLABEL \d2.t_load [13] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [3] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [3] 1
Warning: WIDTHLABEL \d2.t_load [13] 1
Warning: WIDTHLABEL \d2.t_load [12] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [2] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [2] 1
Warning: WIDTHLABEL \d2.t_load [12] 1
Warning: WIDTHLABEL \d2.t_load [11] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [1] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [1] 1
Warning: WIDTHLABEL \d2.t_load [11] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [0] 1
Warning: WIDTHLABEL \d2.t_load [10] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$256.B [9] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [9] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [8] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [0] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [1] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [3] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [2] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [5] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [4] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [7] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [6] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [1] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [0] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [2] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [3] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [4] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [5] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [6] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [7] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [8] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [8] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [9] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$256.B [9] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$256.B [9] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [9] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [8] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [7] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [6] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [5] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [4] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [3] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [2] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [0] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [1] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [8] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [9] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [8] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [7] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [4] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [5] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [4] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [2] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [3] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [2] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [1] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [0] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$256.B [9] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$256.BB [9] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$256.B [9] 1
Warning: WIDTHLABEL \d2.r_reg [1] 1
Warning: WIDTHLABEL \d2.t_load [0] 1
Warning: WIDTHLABEL \d2.r_reg [2] 1
Warning: WIDTHLABEL \d2.t_load [1] 1
Warning: WIDTHLABEL \d2.r_reg [3] 1
Warning: WIDTHLABEL \d2.t_load [2] 1
Warning: WIDTHLABEL \d2.r_reg [4] 1
Warning: WIDTHLABEL \d2.t_load [3] 1
Warning: WIDTHLABEL \d2.r_reg [5] 1
Warning: WIDTHLABEL \d2.t_load [4] 1
Warning: WIDTHLABEL \d2.r_reg [6] 1
Warning: WIDTHLABEL \d2.t_load [5] 1
Warning: WIDTHLABEL \d2.r_reg [7] 1
Warning: WIDTHLABEL \d2.t_load [6] 1
Warning: WIDTHLABEL \d2.r_reg [8] 1
Warning: WIDTHLABEL \d2.t_load [7] 1
Warning: WIDTHLABEL \d2.r_reg [9] 1
Warning: WIDTHLABEL \d2.t_load [8] 1
Warning: WIDTHLABEL \d2.r_reg [10] 1
Warning: WIDTHLABEL \d2.t_load [9] 1
Warning: WIDTHLABEL \d2.r_reg [11] 1
Warning: WIDTHLABEL \d2.t_load [10] 1
Warning: WIDTHLABEL \d2.r_reg [12] 1
Warning: WIDTHLABEL \d2.t_load [11] 1
Warning: WIDTHLABEL \d2.r_reg [13] 1
Warning: WIDTHLABEL \d2.t_load [12] 1
Warning: WIDTHLABEL \d2.r_reg [14] 1
Warning: WIDTHLABEL \d2.t_load [13] 1
Warning: WIDTHLABEL \d2.r_reg [15] 1
Warning: WIDTHLABEL \d2.t_load [14] 1
Warning: WIDTHLABEL \d2.r_reg [16] 1
Warning: WIDTHLABEL \d2.t_load [15] 1
Warning: WIDTHLABEL \d2.r_reg [17] 1
Warning: WIDTHLABEL \d2.t_load [16] 1
Warning: WIDTHLABEL \d2.r_reg [18] 1
Warning: WIDTHLABEL \d2.t_load [17] 1
Warning: WIDTHLABEL \d2.r_reg [19] 1
Warning: WIDTHLABEL \d2.t_load [18] 1
Warning: WIDTHLABEL \d2.r_reg [20] 1
Warning: WIDTHLABEL \d2.t_load [19] 1
Warning: WIDTHLABEL \d2.r_reg [21] 1
Warning: WIDTHLABEL \d2.t_load [20] 1
Warning: WIDTHLABEL \d2.r_reg [22] 1
Warning: WIDTHLABEL \d2.t_load [21] 1
Warning: WIDTHLABEL \d2.r_reg [23] 1
Warning: WIDTHLABEL \d2.t_load [22] 1
Warning: WIDTHLABEL \d2.r_reg [24] 1
Warning: WIDTHLABEL \d2.t_load [23] 1
Warning: WIDTHLABEL \d2.r_reg [25] 1
Warning: WIDTHLABEL \d2.t_load [24] 1
Warning: WIDTHLABEL \d2.r_reg [26] 1
Warning: WIDTHLABEL \d2.t_load [25] 1
Warning: WIDTHLABEL \d2.r_reg [27] 1
Warning: WIDTHLABEL \d2.t_load [26] 1
Warning: WIDTHLABEL \d2.r_reg [28] 1
Warning: WIDTHLABEL \d2.t_load [27] 1
Warning: WIDTHLABEL \d2.r_reg [29] 1
Warning: WIDTHLABEL \d2.t_load [28] 1
Warning: WIDTHLABEL \d2.r_reg [30] 1
Warning: WIDTHLABEL \d2.t_load [29] 1
Warning: WIDTHLABEL \d2.r_reg [31] 1
Warning: WIDTHLABEL \d2.t_load [30] 1
Warning: WIDTHLABEL \d2.r_reg [32] 1
Warning: WIDTHLABEL \d2.t_load [31] 1
Warning: WIDTHLABEL \d2.r_reg [33] 1
Warning: WIDTHLABEL \d2.t_load [32] 1
Warning: WIDTHLABEL \d2.r_reg [34] 1
Warning: WIDTHLABEL \d2.t_load [33] 1
Warning: WIDTHLABEL \d2.r_reg [35] 1
Warning: WIDTHLABEL \d2.t_load [34] 1
Warning: WIDTHLABEL \d2.r_reg [36] 1
Warning: WIDTHLABEL \d2.t_load [35] 1
Warning: WIDTHLABEL \d2.r_reg [37] 1
Warning: WIDTHLABEL \d2.t_load [36] 1
Warning: WIDTHLABEL \d2.r_reg [38] 1
Warning: WIDTHLABEL \d2.t_load [37] 1
Warning: WIDTHLABEL \d2.r_reg [39] 1
Warning: WIDTHLABEL \d2.t_load [38] 1
Warning: WIDTHLABEL \d2.r_reg [40] 1
Warning: WIDTHLABEL \d2.t_load [39] 1
Warning: WIDTHLABEL \d2.r_reg [41] 1
Warning: WIDTHLABEL \d2.t_load [40] 1
Warning: WIDTHLABEL \d2.r_reg [42] 1
Warning: WIDTHLABEL \d2.t_load [41] 1
Warning: WIDTHLABEL \d2.r_reg [43] 1
Warning: WIDTHLABEL \d2.t_load [42] 1
Warning: WIDTHLABEL \d2.r_reg [44] 1
Warning: WIDTHLABEL \d2.t_load [43] 1
Warning: WIDTHLABEL \d2.r_reg [45] 1
Warning: WIDTHLABEL \d2.t_load [44] 1
Warning: WIDTHLABEL \d2.r_reg [46] 1
Warning: WIDTHLABEL \d2.t_load [45] 1
Warning: WIDTHLABEL \d2.r_reg [47] 1
Warning: WIDTHLABEL \d2.t_load [46] 1
Warning: WIDTHLABEL \d2.r_reg [48] 1
Warning: WIDTHLABEL \d2.t_load [47] 1
Warning: WIDTHLABEL \d2.r_reg [49] 1
Warning: WIDTHLABEL \d2.t_load [48] 1
Warning: WIDTHLABEL \d2.r_reg [50] 1
Warning: WIDTHLABEL \d2.t_load [49] 1
Warning: WIDTHLABEL \d2.r_reg [51] 1
Warning: WIDTHLABEL \d2.t_load [50] 1
Warning: WIDTHLABEL \d2.r_reg [52] 1
Warning: WIDTHLABEL \d2.t_load [51] 1
Warning: WIDTHLABEL \d2.r_reg [53] 1
Warning: WIDTHLABEL \d2.t_load [52] 1
Warning: WIDTHLABEL \d2.r_reg [54] 1
Warning: WIDTHLABEL \d2.t_load [53] 1
Warning: WIDTHLABEL \d2.r_reg [55] 1
Warning: WIDTHLABEL \d2.t_load [54] 1
Warning: WIDTHLABEL \d2.r_reg [56] 1
Warning: WIDTHLABEL \d2.t_load [55] 1
Warning: WIDTHLABEL \d2.r_reg [57] 1
Warning: WIDTHLABEL \d2.t_load [56] 1
Warning: WIDTHLABEL \d2.r_reg [58] 1
Warning: WIDTHLABEL \d2.t_load [57] 1
Warning: WIDTHLABEL \d2.r_reg [59] 1
Warning: WIDTHLABEL \d2.t_load [58] 1
Warning: WIDTHLABEL \d2.r_reg [60] 1
Warning: WIDTHLABEL \d2.t_load [59] 1
Warning: WIDTHLABEL \d2.r_reg [61] 1
Warning: WIDTHLABEL \d2.t_load [60] 1
Warning: WIDTHLABEL \d2.r_reg [62] 1
Warning: WIDTHLABEL \d2.t_load [61] 1
Warning: WIDTHLABEL \d2.r_reg [63] 1
Warning: WIDTHLABEL \d2.t_load [62] 1
Warning: WIDTHLABEL \d2.r_reg [64] 1
Warning: WIDTHLABEL \d2.t_load [63] 1
Warning: WIDTHLABEL \d2.r_reg [65] 1
Warning: WIDTHLABEL \d2.t_load [64] 1
Warning: WIDTHLABEL \d2.r_reg [66] 1
Warning: WIDTHLABEL \d2.t_load [65] 1
Warning: WIDTHLABEL \d2.r_reg [67] 1
Warning: WIDTHLABEL \d2.t_load [66] 1
Warning: WIDTHLABEL \d2.r_reg [68] 1
Warning: WIDTHLABEL \d2.t_load [67] 1
Warning: WIDTHLABEL \d2.r_reg [69] 1
Warning: WIDTHLABEL \d2.t_load [68] 1
Warning: WIDTHLABEL \d2.r_reg [70] 1
Warning: WIDTHLABEL \d2.t_load [69] 1
Warning: WIDTHLABEL \d2.r_reg [71] 1
Warning: WIDTHLABEL \d2.t_load [70] 1
Warning: WIDTHLABEL \d2.r_reg [72] 1
Warning: WIDTHLABEL \d2.t_load [71] 1
Warning: WIDTHLABEL \d2.r_reg [73] 1
Warning: WIDTHLABEL \d2.t_load [72] 1
Warning: WIDTHLABEL \d2.r_reg [74] 1
Warning: WIDTHLABEL \d2.t_load [73] 1
Warning: WIDTHLABEL \d2.r_reg [75] 1
Warning: WIDTHLABEL \d2.t_load [74] 1
Warning: WIDTHLABEL \d2.r_reg [76] 1
Warning: WIDTHLABEL \d2.t_load [75] 1
Warning: WIDTHLABEL \d2.r_reg [77] 1
Warning: WIDTHLABEL \d2.t_load [76] 1
Warning: WIDTHLABEL \d2.r_reg [78] 1
Warning: WIDTHLABEL \d2.t_load [77] 1
Warning: WIDTHLABEL \d2.r_reg [79] 1
Warning: WIDTHLABEL \d2.t_load [78] 1
Warning: WIDTHLABEL \d2.r_reg [80] 1
Warning: WIDTHLABEL \d2.t_load [79] 1
Warning: WIDTHLABEL \d2.r_reg [81] 1
Warning: WIDTHLABEL \d2.t_load [80] 1
Warning: WIDTHLABEL \d2.r_reg [82] 1
Warning: WIDTHLABEL \d2.t_load [81] 1
Warning: WIDTHLABEL \d2.r_reg [83] 1
Warning: WIDTHLABEL \d2.t_load [82] 1
Warning: WIDTHLABEL \d2.r_reg [84] 1
Warning: WIDTHLABEL \d2.t_load [83] 1
Warning: WIDTHLABEL \d2.r_reg [85] 1
Warning: WIDTHLABEL \d2.t_load [84] 1
Warning: WIDTHLABEL \d2.r_reg [86] 1
Warning: WIDTHLABEL \d2.t_load [85] 1
Warning: WIDTHLABEL \d2.r_reg [87] 1
Warning: WIDTHLABEL \d2.t_load [86] 1
Warning: WIDTHLABEL \d2.r_reg [88] 1
Warning: WIDTHLABEL \d2.t_load [87] 1
Warning: WIDTHLABEL \d2.r_reg [89] 1
Warning: WIDTHLABEL \d2.t_load [88] 1
Warning: WIDTHLABEL \d2.r_reg [90] 1
Warning: WIDTHLABEL \d2.t_load [89] 1
Warning: WIDTHLABEL \d2.r_reg [91] 1
Warning: WIDTHLABEL \d2.t_load [90] 1
Warning: WIDTHLABEL \d2.r_reg [92] 1
Warning: WIDTHLABEL \d2.t_load [91] 1
Warning: WIDTHLABEL \d2.r_reg [93] 1
Warning: WIDTHLABEL \d2.t_load [92] 1
Warning: WIDTHLABEL \d2.r_reg [94] 1
Warning: WIDTHLABEL \d2.t_load [93] 1
Warning: WIDTHLABEL \d2.r_reg [95] 1
Warning: WIDTHLABEL \d2.t_load [94] 1
Warning: WIDTHLABEL \d2.t_load [95] 1
Warning: WIDTHLABEL \d5.fll_core.corner_tmp [0] 1
Warning: WIDTHLABEL \d2.t_load [30] 1
Warning: WIDTHLABEL \d2.t_load [33] 1
Warning: WIDTHLABEL \corner [0] 1
Warning: WIDTHLABEL \d5.fll_core.corner_tmp [1] 1
Warning: WIDTHLABEL \d2.t_load [31] 1
Warning: WIDTHLABEL \d2.t_load [33] 1
Warning: WIDTHLABEL \corner [1] 1
Warning: WIDTHLABEL \d5.fll_core.corner_tmp [2] 1
Warning: WIDTHLABEL \d2.t_load [32] 1
Warning: WIDTHLABEL \d2.t_load [33] 1
Warning: WIDTHLABEL \corner [2] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [0] 1
Warning: WIDTHLABEL \d2.t_load [47] 1
Warning: WIDTHLABEL \d2.t_load [57] 1
Warning: WIDTHLABEL \d5.register.data_in [0] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [1] 1
Warning: WIDTHLABEL \d2.t_load [48] 1
Warning: WIDTHLABEL \d2.t_load [57] 1
Warning: WIDTHLABEL \d5.register.data_in [1] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [2] 1
Warning: WIDTHLABEL \d2.t_load [49] 1
Warning: WIDTHLABEL \d2.t_load [57] 1
Warning: WIDTHLABEL \d5.register.data_in [2] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [3] 1
Warning: WIDTHLABEL \d2.t_load [50] 1
Warning: WIDTHLABEL \d2.t_load [57] 1
Warning: WIDTHLABEL \d5.register.data_in [3] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [4] 1
Warning: WIDTHLABEL \d2.t_load [51] 1
Warning: WIDTHLABEL \d2.t_load [57] 1
Warning: WIDTHLABEL \d5.register.data_in [4] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [5] 1
Warning: WIDTHLABEL \d2.t_load [52] 1
Warning: WIDTHLABEL \d2.t_load [57] 1
Warning: WIDTHLABEL \d5.register.data_in [5] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [6] 1
Warning: WIDTHLABEL \d2.t_load [53] 1
Warning: WIDTHLABEL \d2.t_load [57] 1
Warning: WIDTHLABEL \d5.register.data_in [6] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [7] 1
Warning: WIDTHLABEL \d2.t_load [54] 1
Warning: WIDTHLABEL \d2.t_load [57] 1
Warning: WIDTHLABEL \d5.register.data_in [7] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [8] 1
Warning: WIDTHLABEL \d2.t_load [55] 1
Warning: WIDTHLABEL \d2.t_load [57] 1
Warning: WIDTHLABEL \d5.register.data_in [8] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [9] 1
Warning: WIDTHLABEL \d2.t_load [56] 1
Warning: WIDTHLABEL \d2.t_load [57] 1
Warning: WIDTHLABEL \d5.register.data_in [9] 1
Warning: WIDTHLABEL \d2.t_load [58] 1
Warning: WIDTHLABEL \d2.t_load [34] 1
Warning: WIDTHLABEL \d2.t_load [44] 1
Warning: WIDTHLABEL \dac [0] 1
Warning: WIDTHLABEL \d2.t_load [59] 1
Warning: WIDTHLABEL \d2.t_load [35] 1
Warning: WIDTHLABEL \d2.t_load [44] 1
Warning: WIDTHLABEL \dac [1] 1
Warning: WIDTHLABEL \d2.t_load [60] 1
Warning: WIDTHLABEL \d2.t_load [36] 1
Warning: WIDTHLABEL \d2.t_load [44] 1
Warning: WIDTHLABEL \dac [2] 1
Warning: WIDTHLABEL \d2.t_load [61] 1
Warning: WIDTHLABEL \d2.t_load [37] 1
Warning: WIDTHLABEL \d2.t_load [44] 1
Warning: WIDTHLABEL \dac [3] 1
Warning: WIDTHLABEL \d2.t_load [62] 1
Warning: WIDTHLABEL \d2.t_load [38] 1
Warning: WIDTHLABEL \d2.t_load [44] 1
Warning: WIDTHLABEL \dac [4] 1
Warning: WIDTHLABEL \d2.t_load [63] 1
Warning: WIDTHLABEL \d2.t_load [39] 1
Warning: WIDTHLABEL \d2.t_load [44] 1
Warning: WIDTHLABEL \dac [5] 1
Warning: WIDTHLABEL \d2.t_load [64] 1
Warning: WIDTHLABEL \d2.t_load [40] 1
Warning: WIDTHLABEL \d2.t_load [44] 1
Warning: WIDTHLABEL \dac [6] 1
Warning: WIDTHLABEL \d2.t_load [65] 1
Warning: WIDTHLABEL \d2.t_load [41] 1
Warning: WIDTHLABEL \d2.t_load [44] 1
Warning: WIDTHLABEL \dac [7] 1
Warning: WIDTHLABEL \d2.t_load [45] 1
Warning: WIDTHLABEL \d2.t_load [46] 1
Warning: WIDTHLABEL \d5.fll_core.counter2.count [0] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$262.X [0] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$256.B [9] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [1] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$216.B [0] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$256.Y [1] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$256.B [9] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [2] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [1] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$256.B [9] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [0] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$256.Y [2] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$256.B [9] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [3] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$256.B [9] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$256.Y [3] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$256.B [9] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [4] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$256.B [9] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$256.Y [4] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$256.B [9] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [5] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$256.B [9] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$256.Y [5] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$256.B [9] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [6] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$256.B [9] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$256.Y [6] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$256.B [9] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [7] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$256.B [9] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$256.Y [7] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$256.B [9] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [8] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$256.B [9] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$256.Y [8] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$256.B [9] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [9] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$256.B [9] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$256.Y [9] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [1] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [0] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$259.Y [1] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [1] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [0] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [2] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$259.Y [2] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [2] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [3] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$259.Y [3] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [3] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [2] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [4] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$259.Y [4] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [4] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [5] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$259.Y [5] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [5] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [4] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [6] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$259.Y [6] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [6] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [7] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$259.Y [7] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [7] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [6] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [8] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$259.Y [8] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [8] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [9] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$259.Y [9] 1
Warning: WIDTHLABEL \d5.fll_core.counter2.count [1] 1
Warning: WIDTHLABEL \d5.fll_core.counter2.count [0] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$262.Y [1] 1
Warning: WIDTHLABEL \d5.fll_core.counter2.count [1] 1
Warning: WIDTHLABEL \d5.fll_core.counter2.count [0] 1
Warning: WIDTHLABEL \d5.fll_core.counter2.count [2] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$262.Y [2] 1
Warning: WIDTHLABEL \d5.fll_core.counter2.count [2] 1
Warning: WIDTHLABEL \d5.fll_core.counter2.count [3] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$262.Y [3] 1
Warning: WIDTHLABEL \d5.fll_core.counter2.count [3] 1
Warning: WIDTHLABEL \d5.fll_core.counter2.count [2] 1
Warning: WIDTHLABEL \d5.fll_core.counter2.count [4] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$262.Y [4] 1
Warning: WIDTHLABEL \d5.fll_core.counter2.count [4] 1
Warning: WIDTHLABEL \d5.fll_core.counter2.count [5] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$262.Y [5] 1
Warning: WIDTHLABEL \d5.fll_core.counter2.count [5] 1
Warning: WIDTHLABEL \d5.fll_core.counter2.count [4] 1
Warning: WIDTHLABEL \d5.fll_core.counter2.count [6] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$262.Y [6] 1
Warning: WIDTHLABEL \d5.fll_core.counter2.count [6] 1
Warning: WIDTHLABEL \d5.fll_core.counter2.count [7] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$262.Y [7] 1
Warning: WIDTHLABEL \d5.fll_core.counter2.count [7] 1
Warning: WIDTHLABEL \d5.fll_core.counter2.count [6] 1
Warning: WIDTHLABEL \d5.fll_core.counter2.count [8] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$262.Y [8] 1
Warning: WIDTHLABEL \d5.fll_core.counter2.count [8] 1
Warning: WIDTHLABEL \d5.fll_core.counter2.count [9] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$262.Y [9] 1
Warning: WIDTHLABEL \d2.r_reg [0] 1
Warning: WIDTHLABEL \d2.r_reg [1] 1
Warning: WIDTHLABEL \d2.r_reg [2] 1
Warning: WIDTHLABEL \d2.r_reg [3] 1
Warning: WIDTHLABEL \d2.r_reg [4] 1
Warning: WIDTHLABEL \d2.r_reg [5] 1
Warning: WIDTHLABEL \d2.r_reg [6] 1
Warning: WIDTHLABEL \d2.r_reg [7] 1
Warning: WIDTHLABEL \d2.r_reg [8] 1
Warning: WIDTHLABEL \d2.r_reg [9] 1
Warning: WIDTHLABEL \d2.r_reg [10] 1
Warning: WIDTHLABEL \d2.r_reg [11] 1
Warning: WIDTHLABEL \d2.r_reg [12] 1
Warning: WIDTHLABEL \d2.r_reg [13] 1
Warning: WIDTHLABEL \d2.r_reg [14] 1
Warning: WIDTHLABEL \d2.r_reg [15] 1
Warning: WIDTHLABEL \d2.r_reg [16] 1
Warning: WIDTHLABEL \d2.r_reg [17] 1
Warning: WIDTHLABEL \d2.r_reg [18] 1
Warning: WIDTHLABEL \d2.r_reg [19] 1
Warning: WIDTHLABEL \d2.r_reg [20] 1
Warning: WIDTHLABEL \d2.r_reg [21] 1
Warning: WIDTHLABEL \d2.r_reg [22] 1
Warning: WIDTHLABEL \d2.r_reg [23] 1
Warning: WIDTHLABEL \d2.r_reg [24] 1
Warning: WIDTHLABEL \d2.r_reg [25] 1
Warning: WIDTHLABEL \d2.r_reg [26] 1
Warning: WIDTHLABEL \d2.r_reg [27] 1
Warning: WIDTHLABEL \d2.r_reg [28] 1
Warning: WIDTHLABEL \d2.r_reg [29] 1
Warning: WIDTHLABEL \d2.r_reg [30] 1
Warning: WIDTHLABEL \d2.r_reg [31] 1
Warning: WIDTHLABEL \d2.r_reg [32] 1
Warning: WIDTHLABEL \d2.r_reg [33] 1
Warning: WIDTHLABEL \d2.r_reg [34] 1
Warning: WIDTHLABEL \d2.r_reg [35] 1
Warning: WIDTHLABEL \d2.r_reg [36] 1
Warning: WIDTHLABEL \d2.r_reg [37] 1
Warning: WIDTHLABEL \d2.r_reg [38] 1
Warning: WIDTHLABEL \d2.r_reg [39] 1
Warning: WIDTHLABEL \d2.r_reg [40] 1
Warning: WIDTHLABEL \d2.r_reg [41] 1
Warning: WIDTHLABEL \d2.r_reg [42] 1
Warning: WIDTHLABEL \d2.r_reg [43] 1
Warning: WIDTHLABEL \d2.r_reg [44] 1
Warning: WIDTHLABEL \d2.r_reg [45] 1
Warning: WIDTHLABEL \d2.r_reg [46] 1
Warning: WIDTHLABEL \d2.r_reg [47] 1
Warning: WIDTHLABEL \d2.r_reg [48] 1
Warning: WIDTHLABEL \d2.r_reg [49] 1
Warning: WIDTHLABEL \d2.r_reg [50] 1
Warning: WIDTHLABEL \d2.r_reg [51] 1
Warning: WIDTHLABEL \d2.r_reg [52] 1
Warning: WIDTHLABEL \d2.r_reg [53] 1
Warning: WIDTHLABEL \d2.r_reg [54] 1
Warning: WIDTHLABEL \d2.r_reg [55] 1
Warning: WIDTHLABEL \d2.r_reg [56] 1
Warning: WIDTHLABEL \d2.r_reg [57] 1
Warning: WIDTHLABEL \d2.r_reg [58] 1
Warning: WIDTHLABEL \d2.r_reg [59] 1
Warning: WIDTHLABEL \d2.r_reg [60] 1
Warning: WIDTHLABEL \d2.r_reg [61] 1
Warning: WIDTHLABEL \d2.r_reg [62] 1
Warning: WIDTHLABEL \d2.r_reg [63] 1
Warning: WIDTHLABEL \d2.r_reg [64] 1
Warning: WIDTHLABEL \d2.r_reg [65] 1
Warning: WIDTHLABEL \d2.r_reg [66] 1
Warning: WIDTHLABEL \d2.r_reg [67] 1
Warning: WIDTHLABEL \d2.r_reg [68] 1
Warning: WIDTHLABEL \d2.r_reg [69] 1
Warning: WIDTHLABEL \d2.r_reg [70] 1
Warning: WIDTHLABEL \d2.r_reg [71] 1
Warning: WIDTHLABEL \d2.r_reg [72] 1
Warning: WIDTHLABEL \d2.r_reg [73] 1
Warning: WIDTHLABEL \d2.r_reg [74] 1
Warning: WIDTHLABEL \d2.r_reg [75] 1
Warning: WIDTHLABEL \d2.r_reg [76] 1
Warning: WIDTHLABEL \d2.r_reg [77] 1
Warning: WIDTHLABEL \d2.r_reg [78] 1
Warning: WIDTHLABEL \d2.r_reg [79] 1
Warning: WIDTHLABEL \d2.r_reg [80] 1
Warning: WIDTHLABEL \d2.r_reg [81] 1
Warning: WIDTHLABEL \d2.r_reg [82] 1
Warning: WIDTHLABEL \d2.r_reg [83] 1
Warning: WIDTHLABEL \d2.r_reg [84] 1
Warning: WIDTHLABEL \d2.r_reg [85] 1
Warning: WIDTHLABEL \d2.r_reg [86] 1
Warning: WIDTHLABEL \d2.r_reg [87] 1
Warning: WIDTHLABEL \d2.r_reg [88] 1
Warning: WIDTHLABEL \d2.r_reg [89] 1
Warning: WIDTHLABEL \d2.r_reg [90] 1
Warning: WIDTHLABEL \d2.r_reg [91] 1
Warning: WIDTHLABEL \d2.r_reg [92] 1
Warning: WIDTHLABEL \d2.r_reg [93] 1
Warning: WIDTHLABEL \d2.r_reg [94] 1
Warning: WIDTHLABEL \d2.r_reg [95] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$256.BB [9] 1
Warning: WIDTHLABEL \d5.fll_core.corner_tmp [0] 1
Warning: WIDTHLABEL \d5.fll_core.corner_tmp [1] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$256.B [9] 1
Warning: WIDTHLABEL \d5.fll_core.corner_tmp [2] 1
Warning: WIDTHLABEL \d2.r_reg [0] 1
Warning: WIDTHLABEL \d2.t_load [0] 1
Warning: WIDTHLABEL \d2.r_reg [1] 1
Warning: WIDTHLABEL \d2.t_load [1] 1
Warning: WIDTHLABEL \d2.r_reg [2] 1
Warning: WIDTHLABEL \d2.t_load [2] 1
Warning: WIDTHLABEL \d2.r_reg [3] 1
Warning: WIDTHLABEL \d2.t_load [3] 1
Warning: WIDTHLABEL \d2.r_reg [4] 1
Warning: WIDTHLABEL \d2.t_load [4] 1
Warning: WIDTHLABEL \d2.r_reg [5] 1
Warning: WIDTHLABEL \d2.t_load [5] 1
Warning: WIDTHLABEL \d2.r_reg [6] 1
Warning: WIDTHLABEL \d2.t_load [6] 1
Warning: WIDTHLABEL \d2.r_reg [7] 1
Warning: WIDTHLABEL \d2.t_load [7] 1
Warning: WIDTHLABEL \d2.r_reg [8] 1
Warning: WIDTHLABEL \d2.t_load [8] 1
Warning: WIDTHLABEL \d2.r_reg [9] 1
Warning: WIDTHLABEL \d2.t_load [9] 1
Warning: WIDTHLABEL \d2.r_reg [10] 1
Warning: WIDTHLABEL \d2.t_load [10] 1
Warning: WIDTHLABEL \d2.r_reg [11] 1
Warning: WIDTHLABEL \d2.t_load [11] 1
Warning: WIDTHLABEL \d2.r_reg [12] 1
Warning: WIDTHLABEL \d2.t_load [12] 1
Warning: WIDTHLABEL \d2.r_reg [13] 1
Warning: WIDTHLABEL \d2.t_load [13] 1
Warning: WIDTHLABEL \d2.r_reg [14] 1
Warning: WIDTHLABEL \d2.t_load [14] 1
Warning: WIDTHLABEL \d2.r_reg [15] 1
Warning: WIDTHLABEL \d2.t_load [15] 1
Warning: WIDTHLABEL \d2.r_reg [16] 1
Warning: WIDTHLABEL \d2.t_load [16] 1
Warning: WIDTHLABEL \d2.r_reg [17] 1
Warning: WIDTHLABEL \d2.t_load [17] 1
Warning: WIDTHLABEL \d2.r_reg [18] 1
Warning: WIDTHLABEL \d2.t_load [18] 1
Warning: WIDTHLABEL \d2.r_reg [19] 1
Warning: WIDTHLABEL \d2.t_load [19] 1
Warning: WIDTHLABEL \d2.r_reg [20] 1
Warning: WIDTHLABEL \d2.t_load [20] 1
Warning: WIDTHLABEL \d2.r_reg [21] 1
Warning: WIDTHLABEL \d2.t_load [21] 1
Warning: WIDTHLABEL \d2.r_reg [22] 1
Warning: WIDTHLABEL \d2.t_load [22] 1
Warning: WIDTHLABEL \d2.r_reg [23] 1
Warning: WIDTHLABEL \d2.t_load [23] 1
Warning: WIDTHLABEL \d2.r_reg [24] 1
Warning: WIDTHLABEL \d2.t_load [24] 1
Warning: WIDTHLABEL \d2.r_reg [25] 1
Warning: WIDTHLABEL \d2.t_load [25] 1
Warning: WIDTHLABEL \d2.r_reg [26] 1
Warning: WIDTHLABEL \d2.t_load [26] 1
Warning: WIDTHLABEL \d2.r_reg [27] 1
Warning: WIDTHLABEL \d2.t_load [27] 1
Warning: WIDTHLABEL \d2.r_reg [28] 1
Warning: WIDTHLABEL \d2.t_load [28] 1
Warning: WIDTHLABEL \d2.r_reg [29] 1
Warning: WIDTHLABEL \d2.t_load [29] 1
Warning: WIDTHLABEL \d2.r_reg [30] 1
Warning: WIDTHLABEL \d2.t_load [30] 1
Warning: WIDTHLABEL \d2.r_reg [31] 1
Warning: WIDTHLABEL \d2.t_load [31] 1
Warning: WIDTHLABEL \d2.r_reg [32] 1
Warning: WIDTHLABEL \d2.t_load [32] 1
Warning: WIDTHLABEL \d2.r_reg [33] 1
Warning: WIDTHLABEL \d2.t_load [33] 1
Warning: WIDTHLABEL \d2.r_reg [34] 1
Warning: WIDTHLABEL \d2.t_load [34] 1
Warning: WIDTHLABEL \d2.r_reg [35] 1
Warning: WIDTHLABEL \d2.t_load [35] 1
Warning: WIDTHLABEL \d2.r_reg [36] 1
Warning: WIDTHLABEL \d2.t_load [36] 1
Warning: WIDTHLABEL \d2.r_reg [37] 1
Warning: WIDTHLABEL \d2.t_load [37] 1
Warning: WIDTHLABEL \d2.r_reg [38] 1
Warning: WIDTHLABEL \d2.t_load [38] 1
Warning: WIDTHLABEL \d2.r_reg [39] 1
Warning: WIDTHLABEL \d2.t_load [39] 1
Warning: WIDTHLABEL \d2.r_reg [40] 1
Warning: WIDTHLABEL \d2.t_load [40] 1
Warning: WIDTHLABEL \d2.r_reg [41] 1
Warning: WIDTHLABEL \d2.t_load [41] 1
Warning: WIDTHLABEL \d2.r_reg [42] 1
Warning: WIDTHLABEL \d2.t_load [42] 1
Warning: WIDTHLABEL \d2.r_reg [43] 1
Warning: WIDTHLABEL \d2.t_load [43] 1
Warning: WIDTHLABEL \d2.r_reg [44] 1
Warning: WIDTHLABEL \d2.t_load [44] 1
Warning: WIDTHLABEL \d2.r_reg [45] 1
Warning: WIDTHLABEL \d2.t_load [45] 1
Warning: WIDTHLABEL \d2.r_reg [46] 1
Warning: WIDTHLABEL \d2.t_load [46] 1
Warning: WIDTHLABEL \d2.r_reg [47] 1
Warning: WIDTHLABEL \d2.t_load [47] 1
Warning: WIDTHLABEL \d2.r_reg [48] 1
Warning: WIDTHLABEL \d2.t_load [48] 1
Warning: WIDTHLABEL \d2.r_reg [49] 1
Warning: WIDTHLABEL \d2.t_load [49] 1
Warning: WIDTHLABEL \d2.r_reg [50] 1
Warning: WIDTHLABEL \d2.t_load [50] 1
Warning: WIDTHLABEL \d2.r_reg [51] 1
Warning: WIDTHLABEL \d2.t_load [51] 1
Warning: WIDTHLABEL \d2.r_reg [52] 1
Warning: WIDTHLABEL \d2.t_load [52] 1
Warning: WIDTHLABEL \d2.r_reg [53] 1
Warning: WIDTHLABEL \d2.t_load [53] 1
Warning: WIDTHLABEL \d2.r_reg [54] 1
Warning: WIDTHLABEL \d2.t_load [54] 1
Warning: WIDTHLABEL \d2.r_reg [55] 1
Warning: WIDTHLABEL \d2.t_load [55] 1
Warning: WIDTHLABEL \d2.r_reg [56] 1
Warning: WIDTHLABEL \d2.t_load [56] 1
Warning: WIDTHLABEL \d2.r_reg [57] 1
Warning: WIDTHLABEL \d2.t_load [57] 1
Warning: WIDTHLABEL \d2.r_reg [58] 1
Warning: WIDTHLABEL \d2.t_load [58] 1
Warning: WIDTHLABEL \d2.r_reg [59] 1
Warning: WIDTHLABEL \d2.t_load [59] 1
Warning: WIDTHLABEL \d2.r_reg [60] 1
Warning: WIDTHLABEL \d2.t_load [60] 1
Warning: WIDTHLABEL \d2.r_reg [61] 1
Warning: WIDTHLABEL \d2.t_load [61] 1
Warning: WIDTHLABEL \d2.r_reg [62] 1
Warning: WIDTHLABEL \d2.t_load [62] 1
Warning: WIDTHLABEL \d2.r_reg [63] 1
Warning: WIDTHLABEL \d2.t_load [63] 1
Warning: WIDTHLABEL \d2.r_reg [64] 1
Warning: WIDTHLABEL \d2.t_load [64] 1
Warning: WIDTHLABEL \d2.r_reg [65] 1
Warning: WIDTHLABEL \d2.t_load [65] 1
Warning: WIDTHLABEL \d2.r_reg [66] 1
Warning: WIDTHLABEL \d2.t_load [66] 1
Warning: WIDTHLABEL \d2.r_reg [67] 1
Warning: WIDTHLABEL \d2.t_load [67] 1
Warning: WIDTHLABEL \d2.r_reg [68] 1
Warning: WIDTHLABEL \d2.t_load [68] 1
Warning: WIDTHLABEL \d2.r_reg [69] 1
Warning: WIDTHLABEL \d2.t_load [69] 1
Warning: WIDTHLABEL \d2.r_reg [70] 1
Warning: WIDTHLABEL \d2.t_load [70] 1
Warning: WIDTHLABEL \d2.r_reg [71] 1
Warning: WIDTHLABEL \d2.t_load [71] 1
Warning: WIDTHLABEL \d2.r_reg [72] 1
Warning: WIDTHLABEL \d2.t_load [72] 1
Warning: WIDTHLABEL \d2.r_reg [73] 1
Warning: WIDTHLABEL \d2.t_load [73] 1
Warning: WIDTHLABEL \d2.r_reg [74] 1
Warning: WIDTHLABEL \d2.t_load [74] 1
Warning: WIDTHLABEL \d2.r_reg [75] 1
Warning: WIDTHLABEL \d2.t_load [75] 1
Warning: WIDTHLABEL \d2.r_reg [76] 1
Warning: WIDTHLABEL \d2.t_load [76] 1
Warning: WIDTHLABEL \d2.r_reg [77] 1
Warning: WIDTHLABEL \d2.t_load [77] 1
Warning: WIDTHLABEL \d2.r_reg [78] 1
Warning: WIDTHLABEL \d2.t_load [78] 1
Warning: WIDTHLABEL \d2.r_reg [79] 1
Warning: WIDTHLABEL \d2.t_load [79] 1
Warning: WIDTHLABEL \d2.r_reg [80] 1
Warning: WIDTHLABEL \d2.t_load [80] 1
Warning: WIDTHLABEL \d2.r_reg [81] 1
Warning: WIDTHLABEL \d2.t_load [81] 1
Warning: WIDTHLABEL \d2.r_reg [82] 1
Warning: WIDTHLABEL \d2.t_load [82] 1
Warning: WIDTHLABEL \d2.r_reg [83] 1
Warning: WIDTHLABEL \d2.t_load [83] 1
Warning: WIDTHLABEL \d2.r_reg [84] 1
Warning: WIDTHLABEL \d2.t_load [84] 1
Warning: WIDTHLABEL \d2.r_reg [85] 1
Warning: WIDTHLABEL \d2.t_load [85] 1
Warning: WIDTHLABEL \d2.r_reg [86] 1
Warning: WIDTHLABEL \d2.t_load [86] 1
Warning: WIDTHLABEL \d2.r_reg [87] 1
Warning: WIDTHLABEL \d2.t_load [87] 1
Warning: WIDTHLABEL \d2.r_reg [88] 1
Warning: WIDTHLABEL \d2.t_load [88] 1
Warning: WIDTHLABEL \d2.r_reg [89] 1
Warning: WIDTHLABEL \d2.t_load [89] 1
Warning: WIDTHLABEL \d2.r_reg [90] 1
Warning: WIDTHLABEL \d2.t_load [90] 1
Warning: WIDTHLABEL \d2.r_reg [91] 1
Warning: WIDTHLABEL \d2.t_load [91] 1
Warning: WIDTHLABEL \d2.r_reg [92] 1
Warning: WIDTHLABEL \d2.t_load [92] 1
Warning: WIDTHLABEL \d2.r_reg [93] 1
Warning: WIDTHLABEL \d2.t_load [93] 1
Warning: WIDTHLABEL \d2.r_reg [94] 1
Warning: WIDTHLABEL \d2.t_load [94] 1
Warning: WIDTHLABEL \d2.r_reg [95] 1
Warning: WIDTHLABEL \d2.t_load [95] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$216.B [0] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [0] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$256.Y [1] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [1] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$256.Y [2] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [2] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$256.Y [3] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [3] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$256.Y [4] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [4] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$256.Y [5] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [5] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$256.Y [6] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [6] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$256.Y [7] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [7] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$256.Y [8] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [8] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$256.Y [9] 1
Warning: WIDTHLABEL \d5.fll_core.tmp [9] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$259.X [0] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [0] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$259.Y [1] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [1] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$259.Y [2] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [2] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$259.Y [3] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [3] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$259.Y [4] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [4] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$259.Y [5] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [5] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$259.Y [6] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [6] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$259.Y [7] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [7] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$259.Y [8] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [8] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$259.Y [9] 1
Warning: WIDTHLABEL \d5.fll_core.counter1.count [9] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$262.X [0] 1
Warning: WIDTHLABEL \d5.fll_core.counter2.count [0] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$262.Y [1] 1
Warning: WIDTHLABEL \d5.fll_core.counter2.count [1] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$262.Y [2] 1
Warning: WIDTHLABEL \d5.fll_core.counter2.count [2] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$262.Y [3] 1
Warning: WIDTHLABEL \d5.fll_core.counter2.count [3] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$262.Y [4] 1
Warning: WIDTHLABEL \d5.fll_core.counter2.count [4] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$262.Y [5] 1
Warning: WIDTHLABEL \d5.fll_core.counter2.count [5] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$262.Y [6] 1
Warning: WIDTHLABEL \d5.fll_core.counter2.count [6] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$262.Y [7] 1
Warning: WIDTHLABEL \d5.fll_core.counter2.count [7] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$262.Y [8] 1
Warning: WIDTHLABEL \d5.fll_core.counter2.count [8] 1
Warning: WIDTHLABEL $auto$alumacc.cc:485:replace_alu$262.Y [9] 1
Warning: WIDTHLABEL \d5.fll_core.counter2.count [9] 1
Warning: WIDTHLABEL \d5.register.data_in [0] 1
Warning: WIDTHLABEL \d2.t_load [58] 1
Warning: WIDTHLABEL \d5.register.data_in [1] 1
Warning: WIDTHLABEL \d2.t_load [59] 1
Warning: WIDTHLABEL \d5.register.data_in [2] 1
Warning: WIDTHLABEL \d2.t_load [60] 1
Warning: WIDTHLABEL \d5.register.data_in [3] 1
Warning: WIDTHLABEL \d2.t_load [61] 1
Warning: WIDTHLABEL \d5.register.data_in [4] 1
Warning: WIDTHLABEL \d2.t_load [62] 1
Warning: WIDTHLABEL \d5.register.data_in [5] 1
Warning: WIDTHLABEL \d2.t_load [63] 1
Warning: WIDTHLABEL \d5.register.data_in [6] 1
Warning: WIDTHLABEL \d2.t_load [64] 1
Warning: WIDTHLABEL \d5.register.data_in [7] 1
Warning: WIDTHLABEL \d2.t_load [65] 1
Warning: WIDTHLABEL \d5.register.data_in [8] 1
Warning: WIDTHLABEL \d2.t_load [66] 1
Warning: WIDTHLABEL \d5.register.data_in [9] 1
Warning: WIDTHLABEL \d2.t_load [67] 1

17. Executing SHARE pass (SAT-based resource sharing).

18. Executing OPT pass (performing simple optimizations).

18.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper.

18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper'.
Removed a total of 0 cells.

18.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \wrapper..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

18.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \wrapper.
Performed a total of 0 changes.

18.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\wrapper'.
Removed a total of 0 cells.

18.6. Executing OPT_DFF pass (perform DFF optimizations).

18.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper..

18.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module wrapper.

18.9. Finished OPT passes. (There is nothing left to do.)

19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper..
Removed 0 unused cells and 59 unused wires.
<suppressed ~59 debug messages>

20. Printing statistics.

=== wrapper ===

   Number of wires:                404
   Number of wire bits:            760
   Number of public wires:          30
   Number of public wire bits:     292
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                658
     $_ANDNOT_                      99
     $_AND_                         15
     $_DFFE_PP0N_                   96
     $_DFFE_PP0P_                  106
     $_DFFE_PP1P_                    1
     $_DFFE_PP_                      3
     $_DFF_PP0_                     31
     $_DFF_PP1_                      1
     $_MUX_                        118
     $_NAND_                        11
     $_NOR_                         16
     $_NOT_                         11
     $_ORNOT_                       26
     $_OR_                          43
     $_XNOR_                        10
     $_XOR_                         71

mapping tbuf

21. Executing TECHMAP pass (map to technology primitives).

21.1. Executing Verilog-2005 frontend: /foss/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v
Parsing Verilog input from `/foss/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v' to AST representation.
Generating RTLIL representation for module `\$_TBUF_'.
Successfully finished Verilog frontend.

21.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

22. Executing SIMPLEMAP pass (map simple cells to gate primitives).

23. Executing TECHMAP pass (map to technology primitives).

23.1. Executing Verilog-2005 frontend: /foss/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v
Parsing Verilog input from `/foss/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Successfully finished Verilog frontend.

23.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

24. Executing SIMPLEMAP pass (map simple cells to gate primitives).

25. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell sky130_fd_sc_hd__dfxtp_2 (noninv, pins=3, area=21.27) is a direct match for cell type $_DFF_P_.
  cell sky130_fd_sc_hd__dfrtp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN0_.
  cell sky130_fd_sc_hd__dfstp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN1_.
  cell sky130_fd_sc_hd__dfbbn_2 (noninv, pins=6, area=35.03) is a direct match for cell type $_DFFSR_NNN_.
  final dff cell mappings:
    unmapped dff cell: $_DFF_N_
    \sky130_fd_sc_hd__dfxtp_2 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    unmapped dff cell: $_DFF_NN0_
    unmapped dff cell: $_DFF_NN1_
    unmapped dff cell: $_DFF_NP0_
    unmapped dff cell: $_DFF_NP1_
    \sky130_fd_sc_hd__dfrtp_2 _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .RESET_B( R));
    \sky130_fd_sc_hd__dfstp_2 _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .SET_B( R));
    unmapped dff cell: $_DFF_PP0_
    unmapped dff cell: $_DFF_PP1_
    \sky130_fd_sc_hd__dfbbn_2 _DFFSR_NNN_ (.CLK_N( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B( S));
    unmapped dff cell: $_DFFSR_NNP_
    unmapped dff cell: $_DFFSR_NPN_
    unmapped dff cell: $_DFFSR_NPP_
    unmapped dff cell: $_DFFSR_PNN_
    unmapped dff cell: $_DFFSR_PNP_
    unmapped dff cell: $_DFFSR_PPN_
    unmapped dff cell: $_DFFSR_PPP_

25.1. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).
Mapping DFF cells in module `\wrapper':
  mapped 233 $_DFF_PN0_ cells to \sky130_fd_sc_hd__dfrtp_2 cells.
  mapped 2 $_DFF_PN1_ cells to \sky130_fd_sc_hd__dfstp_2 cells.
  mapped 3 $_DFF_P_ cells to \sky130_fd_sc_hd__dfxtp_2 cells.

26. Printing statistics.

=== wrapper ===

   Number of wires:                845
   Number of wire bits:           1201
   Number of public wires:          30
   Number of public wire bits:     292
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1099
     $_ANDNOT_                      99
     $_AND_                         15
     $_MUX_                        324
     $_NAND_                        11
     $_NOR_                         16
     $_NOT_                        246
     $_ORNOT_                       26
     $_OR_                          43
     $_XNOR_                        10
     $_XOR_                         71
     sky130_fd_sc_hd__dfrtp_2      233
     sky130_fd_sc_hd__dfstp_2        2
     sky130_fd_sc_hd__dfxtp_2        3

[INFO]: USING STRATEGY AREA 0

27. Executing ABC pass (technology mapping using ABC).

27.1. Extracting gate netlist of module `\wrapper' to `/tmp/yosys-abc-BcbpRZ/input.blif'..
Extracted 861 gates and 1093 wires to a netlist network with 231 inputs and 484 outputs.

27.1.1. Executing ABC.
Running ABC command: "/foss/tools/yosys/6e907ac/bin/yosys-abc" -s -f /tmp/yosys-abc-BcbpRZ/abc.script 2>&1
ABC: ABC command line: "source /tmp/yosys-abc-BcbpRZ/abc.script".
ABC: 
ABC: + read_blif /tmp/yosys-abc-BcbpRZ/input.blif 
ABC: + read_lib -w /foss/designs/ma2022/wrapper/runs/RUN_2023.03.12_07.43.52/tmp/synthesis/trimmed.lib 
ABC: Parsing finished successfully.  Parsing time =     0.05 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Library "sky130A_merged" from "/foss/designs/ma2022/wrapper/runs/RUN_2023.03.12_07.43.52/tmp/synthesis/trimmed.lib" has 175 cells (17 skipped: 14 seq; 3 tri-state; 0 no func; 0 dont_use).  Time =     0.08 sec
ABC: Memory =    7.77 MB. Time =     0.08 sec
ABC: Warning: Detected 2 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + read_constr -v /foss/designs/ma2022/wrapper/runs/RUN_2023.03.12_07.43.52/tmp/synthesis/synthesis.sdc 
ABC: Setting driving cell to be "sky130_fd_sc_hd__inv_2".
ABC: Setting output load to be 33.442001.
ABC: + read_constr /foss/designs/ma2022/wrapper/runs/RUN_2023.03.12_07.43.52/tmp/synthesis/synthesis.sdc 
ABC: + fx 
ABC: + mfs 
ABC: + strash 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + retime -D -D 10000 -M 5 
ABC: + scleanup 
ABC: Error: The network is combinational.
ABC: + fraig_store 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + fraig_restore 
ABC: + amap -m -Q 0.1 -F 20 -A 20 -C 5000 
ABC: + retime -D -D 10000 
ABC: + &get -n 
ABC: + &st 
ABC: + &dch 
ABC: + &nf 
ABC: + &put 
ABC: + buffer -N 10 -S 750.0 
ABC: + upsize -D 10000 
ABC: Current delay (2929.52 ps) does not exceed the target delay (10000.00 ps). Upsizing is not performed.
ABC: + dnsize -D 10000 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =   1007 ( 54.0 %)   Cap = 17.4 ff ( 10.3 %)   Area =     7089.30 ( 46.0 %)   Delay =  3334.10 ps  (  4.9 %)               
ABC: Path  0 --     219 : 0    4 pi                        A =   0.00  Df =  41.4  -22.9 ps  S =  63.0 ps  Cin =  0.0 ff  Cout =  12.3 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --     727 : 2    2 sky130_fd_sc_hd__and2b_2  A =   8.76  Df = 268.9  -31.5 ps  S =  65.3 ps  Cin =  1.6 ff  Cout =   9.4 ff  Cmax = 310.4 ff  G =  551  
ABC: Path  2 --     728 : 5    2 sky130_fd_sc_hd__a221oi_2 A =  15.01  Df = 443.6 -168.6 ps  S = 193.9 ps  Cin =  4.5 ff  Cout =   4.1 ff  Cmax =  96.1 ff  G =   88  
ABC: Path  3 --     731 : 5    2 sky130_fd_sc_hd__o2111a_2 A =  12.51  Df = 669.2 -187.0 ps  S =  51.0 ps  Cin =  2.4 ff  Cout =   4.0 ff  Cmax = 299.4 ff  G =  162  
ABC: Path  4 --     745 : 4    1 sky130_fd_sc_hd__a211o_2  A =  10.01  Df =1108.8 -319.4 ps  S =  51.9 ps  Cin =  2.4 ff  Cout =   4.6 ff  Cmax = 325.0 ff  G =  181  
ABC: Path  5 --     746 : 4    3 sky130_fd_sc_hd__a22oi_2  A =  12.51  Df =1314.3 -457.8 ps  S = 214.7 ps  Cin =  4.3 ff  Cout =  11.4 ff  Cmax = 170.3 ff  G =  253  
ABC: Path  6 --     751 : 2    3 sky130_fd_sc_hd__nor2_2   A =   6.26  Df =1423.8 -340.1 ps  S = 228.4 ps  Cin =  4.4 ff  Cout =  19.1 ff  Cmax = 141.9 ff  G =  421  
ABC: Path  7 --     752 : 1   10 sky130_fd_sc_hd__buf_1    A =   3.75  Df =1756.3  -98.4 ps  S = 705.8 ps  Cin =  2.1 ff  Cout =  60.6 ff  Cmax = 130.0 ff  G = 2794  
ABC: Path  8 --     765 : 2    2 sky130_fd_sc_hd__xnor2_2  A =  16.27  Df =2040.4  -40.9 ps  S = 208.8 ps  Cin =  8.5 ff  Cout =  10.6 ff  Cmax = 121.8 ff  G =  120  
ABC: Path  9 --     766 : 3    1 sky130_fd_sc_hd__and3_2   A =   7.51  Df =2323.6  -87.7 ps  S =  43.5 ps  Cin =  1.5 ff  Cout =   2.4 ff  Cmax = 309.5 ff  G =  155  
ABC: Path 10 --     769 : 5    2 sky130_fd_sc_hd__a32o_2   A =  11.26  Df =2520.5   -6.7 ps  S =  88.2 ps  Cin =  2.3 ff  Cout =  10.9 ff  Cmax = 264.6 ff  G =  452  
ABC: Path 11 --     771 : 3    1 sky130_fd_sc_hd__a21o_2   A =   8.76  Df =2742.3  -73.2 ps  S =  59.0 ps  Cin =  2.4 ff  Cout =   9.0 ff  Cmax = 309.5 ff  G =  369  
ABC: Path 12 --     773 : 2    1 sky130_fd_sc_hd__xnor2_2  A =  16.27  Df =2868.2  -74.9 ps  S =  88.8 ps  Cin =  8.5 ff  Cout =   1.8 ff  Cmax = 121.8 ff  G =   20  
ABC: Path 13 --     821 : 3    1 sky130_fd_sc_hd__mux2_2   A =  11.26  Df =3044.4  -31.6 ps  S =  45.5 ps  Cin =  2.3 ff  Cout =   2.2 ff  Cmax = 297.6 ff  G =   92  
ABC: Path 14 --     822 : 1    1 sky130_fd_sc_hd__buf_1    A =   3.75  Df =3334.1  -70.8 ps  S = 396.5 ps  Cin =  2.1 ff  Cout =  33.4 ff  Cmax = 130.0 ff  G = 1590  
ABC: Start-point = pi218 (\d5.fll_core.counter1.count [7]).  End-point = po0 ($auto$rtlil.cc:2560:MuxGate$3392).
ABC: + print_stats -m 
ABC: netlist                       : i/o =  231/  484  lat =    0  nd =  1007  edge =   1910  area =7087.39  delay =14.00  lev = 14
ABC: + write_blif /tmp/yosys-abc-BcbpRZ/output.blif 

27.1.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__o22ai_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o2111a_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__and2b_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__nand2_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__a211o_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__and4b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o21ai_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a21bo_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or2_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__or3_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o211a_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a221o_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a21o_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__o22a_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__a22o_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__or4b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__and4_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__nand3_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o31a_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a221oi_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a22oi_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__o221a_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__and3b_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__or2b_2 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__a32o_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__xor2_2 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__and3_2 cells:       11
ABC RESULTS:   sky130_fd_sc_hd__a21oi_2 cells:       10
ABC RESULTS:   sky130_fd_sc_hd__nor2_2 cells:       20
ABC RESULTS:   sky130_fd_sc_hd__xnor2_2 cells:       18
ABC RESULTS:   sky130_fd_sc_hd__or3b_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__and2_2 cells:        9
ABC RESULTS:   sky130_fd_sc_hd__mux2_2 cells:      322
ABC RESULTS:   sky130_fd_sc_hd__buf_1 cells:      288
ABC RESULTS:   sky130_fd_sc_hd__inv_2 cells:      256
ABC RESULTS:        internal signals:      378
ABC RESULTS:           input signals:      231
ABC RESULTS:          output signals:      484
Removing temp directory.

28. Executing SETUNDEF pass (replace undef values with defined constants).

29. Executing HILOMAP pass (mapping to constant drivers).

30. Executing SPLITNETS pass (splitting up multi-bit signals).

31. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \wrapper..
Removed 2 unused cells and 1199 unused wires.
<suppressed ~36 debug messages>

32. Executing INSBUF pass (insert buffer cells for connected wires).

33. Executing CHECK pass (checking for obvious problems).
Checking module wrapper...
Warning: Wire wrapper.\vbias3 [7] is used but has no driver.
Warning: Wire wrapper.\vbias3 [6] is used but has no driver.
Warning: Wire wrapper.\vbias3 [5] is used but has no driver.
Warning: Wire wrapper.\vbias3 [4] is used but has no driver.
Warning: Wire wrapper.\vbias3 [3] is used but has no driver.
Warning: Wire wrapper.\vbias3 [2] is used but has no driver.
Warning: Wire wrapper.\vbias3 [1] is used but has no driver.
Warning: Wire wrapper.\vbias3 [0] is used but has no driver.
Warning: Wire wrapper.\vbias2 [7] is used but has no driver.
Warning: Wire wrapper.\vbias2 [6] is used but has no driver.
Warning: Wire wrapper.\vbias2 [5] is used but has no driver.
Warning: Wire wrapper.\vbias2 [4] is used but has no driver.
Warning: Wire wrapper.\vbias2 [3] is used but has no driver.
Warning: Wire wrapper.\vbias2 [2] is used but has no driver.
Warning: Wire wrapper.\vbias2 [1] is used but has no driver.
Warning: Wire wrapper.\vbias2 [0] is used but has no driver.
Warning: Wire wrapper.\vbias1 [7] is used but has no driver.
Warning: Wire wrapper.\vbias1 [6] is used but has no driver.
Warning: Wire wrapper.\vbias1 [5] is used but has no driver.
Warning: Wire wrapper.\vbias1 [4] is used but has no driver.
Warning: Wire wrapper.\vbias1 [3] is used but has no driver.
Warning: Wire wrapper.\vbias1 [2] is used but has no driver.
Warning: Wire wrapper.\vbias1 [1] is used but has no driver.
Warning: Wire wrapper.\vbias1 [0] is used but has no driver.
Warning: Wire wrapper.\slope_ctrl [2] is used but has no driver.
Warning: Wire wrapper.\slope_ctrl [1] is used but has no driver.
Warning: Wire wrapper.\slope_ctrl [0] is used but has no driver.
Warning: Wire wrapper.\s_out is used but has no driver.
Warning: Wire wrapper.\lock is used but has no driver.
Warning: Wire wrapper.\dac [9] is used but has no driver.
Warning: Wire wrapper.\dac [8] is used but has no driver.
Warning: Wire wrapper.\dac [7] is used but has no driver.
Warning: Wire wrapper.\dac [6] is used but has no driver.
Warning: Wire wrapper.\dac [5] is used but has no driver.
Warning: Wire wrapper.\dac [4] is used but has no driver.
Warning: Wire wrapper.\dac [3] is used but has no driver.
Warning: Wire wrapper.\dac [2] is used but has no driver.
Warning: Wire wrapper.\dac [1] is used but has no driver.
Warning: Wire wrapper.\dac [0] is used but has no driver.
Warning: Wire wrapper.\corner [2] is used but has no driver.
Warning: Wire wrapper.\corner [1] is used but has no driver.
Warning: Wire wrapper.\corner [0] is used but has no driver.
Found and reported 42 problems.

34. Printing statistics.

=== wrapper ===

   Number of wires:               1210
   Number of wire bits:           1244
   Number of public wires:         225
   Number of public wire bits:     259
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1247
     sky130_fd_sc_hd__a211o_2        2
     sky130_fd_sc_hd__a21bo_2        1
     sky130_fd_sc_hd__a21o_2         4
     sky130_fd_sc_hd__a21oi_2       10
     sky130_fd_sc_hd__a221o_2        2
     sky130_fd_sc_hd__a221oi_2       2
     sky130_fd_sc_hd__a22o_2         4
     sky130_fd_sc_hd__a22oi_2        3
     sky130_fd_sc_hd__a32o_2         3
     sky130_fd_sc_hd__and2_2         9
     sky130_fd_sc_hd__and2b_2        2
     sky130_fd_sc_hd__and3_2        11
     sky130_fd_sc_hd__and3b_2        3
     sky130_fd_sc_hd__and4_2         3
     sky130_fd_sc_hd__and4b_2        1
     sky130_fd_sc_hd__buf_1        288
     sky130_fd_sc_hd__conb_1         2
     sky130_fd_sc_hd__dfrtp_2      233
     sky130_fd_sc_hd__dfstp_2        2
     sky130_fd_sc_hd__dfxtp_2        3
     sky130_fd_sc_hd__inv_2        256
     sky130_fd_sc_hd__mux2_2       322
     sky130_fd_sc_hd__nand2_2        4
     sky130_fd_sc_hd__nand3_2        1
     sky130_fd_sc_hd__nor2_2        20
     sky130_fd_sc_hd__o2111a_2       1
     sky130_fd_sc_hd__o211a_2        1
     sky130_fd_sc_hd__o21ai_2        1
     sky130_fd_sc_hd__o221a_2        5
     sky130_fd_sc_hd__o22a_2         5
     sky130_fd_sc_hd__o22ai_2        1
     sky130_fd_sc_hd__o31a_2         1
     sky130_fd_sc_hd__or2_2          3
     sky130_fd_sc_hd__or2b_2         7
     sky130_fd_sc_hd__or3_2          2
     sky130_fd_sc_hd__or3b_2         2
     sky130_fd_sc_hd__or4b_2         1
     sky130_fd_sc_hd__xnor2_2       18
     sky130_fd_sc_hd__xor2_2         8

   Chip area for module '\wrapper': 13335.289600

35. Executing Verilog backend.

35.1. Executing BMUXMAP pass.

35.2. Executing DEMUXMAP pass.
Dumping module `\wrapper'.

Warnings: 362 unique messages, 988 total
End of script. Logfile hash: 9f6bb0a5ef, CPU: user 0.42s system 0.58s, MEM: 31.52 MB peak
Yosys 0.20+70 (git sha1 6e907acf8, gcc 11.2.1 -fPIC -Os)
Time spent: 55% 2x abc (1 sec), 7% 2x write_verilog (0 sec), ...
